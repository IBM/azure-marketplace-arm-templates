{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix for resource names"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure location for resources"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-vm')]",
            "metadata": {
                "description": "Name for the Azure virtual machine"
            }
        },
        "extensionName": {
            "type": "string",
            "defaultValue": "installCpdCli",
            "metadata": {
                "description": "Name of the VM Extension"
            }
        },
        "openShiftApiUrl": {
            "type": "string",
            "metadata": {
                "description": "API URL for the OpenShift cluster"
            }
        },
        "openShiftUsername": {
            "type": "string",
            "defaultValue": "kubeadmin",
            "metadata": {
                "description": "Username for the cluster administrator"
            }
        },
        "openShiftAuthType": {
            "type": "string",
            "defaultValue": "Password",
            "allowedValues": [
                "Password",
                "Token"
            ],
            "metadata": {
                "description": "Determines the type of openShiftPassword provided - either a token or password/username credentials."
            }
        },
        "openShiftPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the cluster administrator. Can be either a password or a token depending upon openShiftAuthType setting."
            }
        },
        "logLevel": {
            "type": "string",
            "defaultValue": "info",
            "allowedValues": [
                "info",
                "debug"
            ],
            "metadata": {
                "description": "Log level for Ansible playbook"
            }
        },
        "gdscName": {
            "type": "string",
            "defaultValue": "gdsc",
            "metadata": {
                "description": "Name of the GDSC operand to create"
            }
        },
        "gdscNamespace": {
            "type": "string",
            "defaultValue": "gdsc",
            "metadata": {
                "description": "OpenShift namespace for the GDSC operators"
            }
        },
        "gdscVersion": {
            "type": "string",
            "defaultValue": "3.6.2",
            "metadata": {
                "description": "GDSC version to deploy"
            }
        },
        "gdscLicense": {
            "type": "string",
            "defaultValue": "L-QABB-9QRLFB",
            "metadata": {
                "description": "GDSC License to be used"
            }
        },
        "gdscSize": {
            "type": "string",
            "defaultValue": "values-small",
            "metadata": {
                "description": "GDSC operand size"
            }
        },
        "gdscBackupName": {
            "type": "string",
            "defaultValue": "gdsc-backup",
            "metadata": {
                "description": "Name for the GDSC Backup PVC"
            }
        },
        "gdscBackupSC": {
            "type": "string",
            "defaultValue": "[parameters('rwxStorageClass')]",
            "metadata": {
                "description": "Storage class to be used for the GDSC Backup PVC"
            }
        },
        "gdscBackupSize": {
            "type": "string",
            "defaultValue": "500Gi",
            "metadata": {
                "description": "Size of the GDSC Backup PVC"
            }
        },
        "rwoStorageClass": {
            "type": "string",
            "defaultValue": "ocs-storagecluster-ceph-rbd",
            "metadata": {
                "description": "RWO Block storage class to be used for the operand"
            }
        },
        "rwxStorageClass": {
            "type": "string",
            "defaultValue": "ocs-storagecluster-cephfs",
            "metadata": {
                "description": "RWX File storage class to be used for the operand"
            }
        },
        "imagePullSecret": {
            "type": "string",
            "defaultValue": "ibm-entitlement-key",
            "metadata": {
                "description": "Pull secret name for the operand image repository"
            }
        },
        "imageRepository": {
            "type": "string",
            "defaultValue": "cp.icr.io/cp/ibm-guardium-data-security-center",
            "metadata": {
                "description": "Name of the repository for the operand iamges"
            }
        },
        "icsNamespace": {
            "type": "string",
            "defaultValue": "[parameters('gdscNamespace')]",
            "metadata": {
                "description": "Namespace for IBM Common Services"
            }
        },
        "icsCatalogRegistry": {
            "type": "string",
            "defaultValue": "common-service",
            "metadata": {
                "description": "Catalog name for the common services registry"
            }
        },
        "homeDirectory": {
            "type": "string",
            "defaultValue": "/root",
            "metadata": {
                "description": "Home directory in which to run commands"
            }
        },
        "caseDataFileName": {
            "type": "string",
            "defaultValue": "case-info.yaml",
            "metadata": {
                "description": "Name of the data file containing the CASE details"
            }
        },
        "binariesDirectory": {
            "type": "string",
            "defaultValue": "/usr/local/bin",
            "metadata": {
                "description": "Directory for CLI binaries"
            }
        },
        "tmpDirectory": {
            "type": "string",
            "defaultValue": "/tmp",
            "metadata": {
                "description": "Temporary working directory for downloads, etc"
            }
        },
        "pythonInterpreter": {
            "type": "string",
            "defaultValue": "/usr/bin/python3",
            "metadata": {
                "description": "Path to python interpreter to use for Ansible"
            }
        },
        "gitRepositoryUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/IBM/azure-marketplace-arm-templates/",
            "metadata": {
                "description": "URL for the GitHub repository containing the files to download"
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Github branch for installation script"
            }
        },
        "gitBaseDirectory": {
            "type": "string",
            "defaultValue": "/guardium/",
            "metadata": {
                "description": "Subdirectory within the GitHub repository to use"
            }
        },
        "deploymentVersion": {
            "type": "string",
            "defaultValue": "2025-02",
            "metadata": {
                "description": "Deployment version to use"
            }
        }
    },
    "variables": {
        "baseUrl": "[uri(parameters('gitRepositoryUrl'),parameters('branch'))]",
        "gitRepoBaseDirectory": "[parameters('gitBaseDirectory')]",
        "gitRepoDeploymentDirectory": "/deploy-gdsc-operand/",
        "scriptParameters": {
            "ansible_python_interpreter": "[parameters('pythonInterpreter')]",
            "log_level": "[parameters('logLevel')]",
            "casedata": {
                "filename": "[parameters('caseDataFileName')]"
            },
            "env": {
                "home": "[parameters('homeDirectory')]"
            },
            "cluster": {
                "api_server": "[parameters('openShiftApiUrl')]",
                "username": "[parameters('openShiftUsername')]",
                "password": "[if(equals(parameters('openShiftAuthType'),'Password'),parameters('openShiftPassword'),'')]",
                "token": "[if(equals(parameters('openShiftAuthType'),'Token'),parameters('openShiftPassword'),'')]"
            },
            "gdsc": {
                "name": "[parameters('gdscName')]",
                "namespace": "[parameters('gdscNamespace')]",
                "version": "[parameters('gdscVersion')]",
                "size": "[parameters('gdscSize')]",
                "license": "[parameters('gdscLicense')]",
                "backup_pvc": {
                    "name": "[parameters('gdscBackupName')]",
                    "storageclass": "[parameters('gdscBackupSC')]",
                    "size": "[parameters('gdscBackupSize')]"
                }
            },
            "storageclass": {
                "rwo": "[parameters('rwoStorageClass')]",
                "rwx": "[parameters('rwxStorageClass')]"
            },
            "image": {
                "pull_secret": "[parameters('imagePullSecret')]",
                "repository": "[parameters('imageRepository')]"
            },
            "ics": {
                "namespace": "[parameters('icsNamespace')]",
                "catalog_registry": "[parameters('icsCatalogRegistry')]"
            },
            "directories": {
                "bin_dir": "[parameters('binariesDirectory')]",
                "tmp_dir": "[parameters('tmpDirectory')]"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2023-03-01",
            "location": "[parameters('location')]",
            "name": "[concat(parameters('vmName'),'/',parameters('extensionName'))]",
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "fileUris": [
                        "[uri(variables('baseUrl'),concat(parameters('branch'),variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),variables('gitRepoDeploymentDirectory'),'playbooks/main.yaml'))]",
                        "[uri(variables('baseUrl'),concat(parameters('branch'),variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),variables('gitRepoDeploymentDirectory'),'playbooks/templates/gdsc-backup-pvc.j2'))]",
                        "[uri(variables('baseUrl'),concat(parameters('branch'),variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),variables('gitRepoDeploymentDirectory'),'playbooks/templates/gdsc-operand.j2'))]",
                        "[uri(variables('baseUrl'),concat(parameters('branch'),variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),variables('gitRepoDeploymentDirectory'),'wait-for-cloud-init.sh'))]"
                    ],
                    "commandToExecute": "[concat('/bin/bash ./wait-for-cloud-init.sh && /usr/local/bin/ansible-playbook ./main.yaml --extra-vars \"', replace(string(variables('scriptParameters')), '\"', '\\\"'),'\"')]"
                }
            }
        }
    ],
    "outputs": {
    }
}