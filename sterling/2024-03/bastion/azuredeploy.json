{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix for resource names"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual network for bastion subnet"
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/20",
            "metadata": {
                "description": "CIDR for Virtual Network if being created otherwise ignored"
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Name of the resource group containing the virtual network if existing VNet"
            }
        },
        "virtualNetworkNewOrExisting":{
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Flag to indicate whether a new virtual network should be created (true), or use an existing one (false)."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure location for resources"
            }
        },
        "bastionSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.5.0/24",
            "metadata": {
                "description": "CIDR for the bastion subnet"
            }
        },
        "sku": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "SKU for the bastion service"
            }
        },
        "disableCopyPaste": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Disable ability to copy and paste to bastion session"
            }
        },
        "dnsName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "DNS name for the Bastion front end if required"
            }
        },
        "enableFileCopy": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable the file copy feature of the bastion service"
            }
        },
        "enableIpConnect": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable the IP Connect feature of the bastion service"
            }
        },
        "enableKerberos": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable the kerberos feature of the bastion service"
            }
        },
        "enableShareableLink": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable the Shareable link feature of the bastion service"
            }
        },
        "enableTunneling": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable the tunneling feature of the bastion service"
            }
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'workspace')]",
            "metadata": {
                "description": "Name for the analytics workspace"
            }
        },
        "logAnalyticsSku": {
            "type": "string",
            "defaultValue": "PerGB2018",
            "allowedValues": [
                "Free",
                "Standalone",
                "PerNode",
                "PerGB2018"
            ],
            "metadata": {
                "description": "SKU for the log analytics service if setting up a new workspace."
            }
        },
        "createAnalyticsWorkspace": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create a new workspace"
            }
        },
        "deployLogAnalytics": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy Log Analytics"
            }
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for resources"
            }
        }
    },
    "variables": {
        "publicIpAddressName": "[concat(parameters('namePrefix'), '-bastion-public-ip')]",
        "bastionHostName": "[concat(parameters('namePrefix'), '-bastion-vm')]",
        "bastionSubnetName": "AzureBastionSubnet",
        "vnetId": {
            "new": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
            "existing": "[resourceId(parameters('networkResourceGroup'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]"
        },
        "subnetId": "[concat(variables('vnetId')[parameters('virtualNetworkNewOrExisting')],'/subnets/',variables('bastionSubnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "condition": "[equals(parameters('virtualNetworkNewOrExisting'),'new')]",
            "comments": "Create a new virtual network if requested.",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), parameters('tagsByResource')['Microsoft.Network/virtualNetworks'], json('{}')) ]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetCIDR')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "configureBastionSubnet",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "resourceGroup": "[parameters('networkResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[variables('bastionSubnetName')]" 
                    },
                    "subnetCIDR": {
                        "value": "[parameters('bastionSubnetCIDR')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vnetName": {
                            "type": "string"
                        },
                        "subnetCIDR": {
                            "type": "string"
                        },
                        "subnetName": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2020-11-01",
                            "name": "[concat(parameters('vnetName'),'/',parameters('subnetName'))]",
                            "properties": {
                                "addressPrefix": "[parameters('subnetCIDR')]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-07-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), parameters('tagsByResource')['Microsoft.Network/publicIPAddresses'], json('{}')) ]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2022-07-01",
            "name": "[variables('bastionHostName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]"
            },
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/bastionHosts'), parameters('tagsByResource')['Microsoft.Network/bastionHosts'], json('{}')) ]",
            "properties": {
                "disableCopyPaste": "[if(equals(parameters('sku'),'Standard'),parameters('disableCopyPaste'),json('null'))]",
                "dnsName": "[if(equals(parameters('dnsName'),''),json('null'),parameters('dnsName'))]",
                "enableFileCopy": "[if(equals(parameters('sku'),'Standard'),parameters('enableFileCopy'),json('null'))]",
                "enableIpConnect": "[if(equals(parameters('sku'),'Standard'),parameters('enableIpConnect'),json('null'))]",
                "enableKerberos": "[if(equals(parameters('sku'),'Standard'),parameters('enableKerberos'),json('null'))]",
                "enableShareableLink": "[if(equals(parameters('sku'),'Standard'),parameters('enableShareableLink'),json('null'))]",
                "enableTunneling": "[if(equals(parameters('sku'),'Standard'),parameters('enableTunneling'),json('null'))]",
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]",
                "[resourceId(parameters('networkResourceGroup'),'Microsoft.Resources/deployments', 'configureBastionSubnet')]"
            ]
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2022-10-01",
            "condition": "[and(parameters('createAnalyticsWorkspace'), parameters('deployLogAnalytics'))]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.OperationalInsights/workspaces'), parameters('tagsByResource')['Microsoft.OperationalInsights/workspaces'], json('{}')) ]",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "[parameters('logAnalyticsSku')]"
                }
            }
        },
        {
            "type": "Microsoft.Insights/diagnosticSettings",
            "apiVersion": "2021-05-01-preview",
            "scope": "[format('Microsoft.Network/bastionHosts/{0}', variables('bastionHostName'))]",
            "name": "default",
            "properties": {
            "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]",
            "logs": [
                {
                "category": "BastionAuditLogs",
                "enabled": true
                }
            ]
            },
            "dependsOn": [
            "[resourceId('Microsoft.Network/bastionHosts', variables('bastionHostName'))]",
            "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
            ]
        }
    ]
}