---

- name: Check if entitlement key already exists (namespace scope)
  ansible.builtin.shell: |
    set timeout 300
    {{ directories.bin_dir }}/oc get secret -n {{ operator.namespace }} ibm-entitlement-key 2> /dev/null
    exit 0
  args:
    executable: /bin/bash
  register: query_returnedInfo
  when: operator.scope == "namespace"

- name: Parse returned data to determine if secret already exists (namespace scope)
  set_fact:
    secretExists: "{{True if(query_returnedInfo.stdout | length > 0) else False}}"
  when: operator.scope == "namespace"

- name: Create the entitlement key secret (namespace scope)
  ansible.builtin.shell:
    cmd: "{{ directories.bin_dir }}/oc create secret docker-registry ibm-entitlement-key --docker-server=cp.icr.io --docker-username=cp --docker-password={{ entitlementKey }} -n {{ operator.namespace }}"
  args:
    executable: /bin/bash
  when: 
    - operator.scope == "namespace"
    - not secretExists
  register: result

- name: Download the current global pull secret (cluster scope)
  ansible.builtin.shell: 
    cmd: "{{ directories.bin_dir }}/oc get secret/pull-secret -n openshift-config --template='{{ '{{' }} index .data \".dockerconfigjson\" | base64decode {{ '}}' }} ' > {{ directories.tmp_dir }}/pull-secret.json"
  args:
    executable: /bin/bash
  when: 
    - operator.scope == "cluster"

- name: Add the entitlement key to the pull secret file (cluster scope)
  ansible.builtin.shell: |
    set timeout 30
    {{ directories.bin_dir }}/oc registry login \
                        --registry="cp.icr.io" \
                        --auth-basic="cp:{{ entitlementKey }}" \
                        --to={{ directories.tmp_dir }}/pull-secret.json
    exit 0
    
  args:
    executable: /bin/bash
  when: 
    - operator.scope == "cluster"

- name: Update the global pull secret in the cluster (cluster scope)
  ansible.builtin.shell:
    cmd: "{{ directories.bin_dir }}/oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson={{ directories.tmp_dir }}/pull-secret.json"  
  args:
    executable: /bin/bash
  when: 
    - operator.scope == "cluster"

- name: Clean up the temporary file (cluster scope)
  ansible.builtin.file:
    state: absent
    path: "{{ directories.tmp_dir }}/pull-secret.json"
