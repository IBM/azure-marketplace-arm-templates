{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix for resource names. Must start with a letter and be 3 to 10 characters."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure region for the deployment"
            }
        },
        "scriptStorageAccountName": {
            "type": "string",
            "defaultValue": "[ concat( toLower( parameters('namePrefix') ), 'script', substring( uniqueString(resourceGroup().id), 1, 7 ) ) ]",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "Storage account name for the deployment scripts"
            }
        },
        "managedIdName": {
            "type": "string",
            "defaultValue": "[ concat( parameters('namePrefix'), '-id' ) ]",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "Name of the managed identity for the resource group"
            }
        },
        "vaultName": {
            "type": "string",
            "defaultValue": "[ concat( parameters('namePrefix'), '-', substring( uniqueString(resourceGroup().id), 1, 5 ), '-keyvault' ) ]",
            "metadata": {
                "description": "Name of the key vault to store credentials"
            }
        },
        "clusterPasswordSecretName": {
            "type": "string",
            "defaultValue": "cluster-password",
            "metadata": {
                "description": "Name of the secret to create in the key vault for the cluster password"
            }
        },
        "keyName": {
            "type": "string",
            "defaultValue": "[ concat(parameters('namePrefix'), '-sshkey') ]",
            "metadata": {
                "description": "Name of the secret to create in the key vault for the private SSH key"
            }
        },
        "sshKeyScriptGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "Identifier for SSH key creation script. Script will only re-run if changed."
            }
        },
        "deployPrereqs": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to run the script prerequisites (for debug only)"
            }
        },
        "deployKeyVault": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create the key vault (for debug only)"
            }
        },
        "hostEncryption": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether hosts should have host-level encryption enabled, \"Encryption At Host\" (requires activation for Azure subscription)"
            }
        },
        "publicSshKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Public SSH Key for the AKS nodes"
            }
        },
        "namespace": {
            "type": "string",
            "defaultValue": "cp4i",
            "metadata": {
                "description": "Namespace for CP4I instance"
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group containing the virtual network"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "existingVnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether the virtual network already exists"
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/20",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "aksSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "CIDR for the AKS subnet"
            }
        },
        "aksSubnetName": {
            "type": "string",
            "defaultValue": "control-subnet",
            "metadata": {
                "description": "Name of the AKS subnet"
            }
        },
        "aksNsgName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-',parameters('aksSubnetName'),'-nsg')]",
            "metadata": {
                "description": "Name of the NSG for the AKS subnet"
            }
        },
        "endpointSubnetName": {
            "type": "string",
            "defaultValue": "endpoint-subnet",
            "metadata": {
                "description": "Name of the subnet to attach the private link services to"
            }
        },
        "endpointSubnetCidr": {
            "type": "string",
            "defaultValue": "10.0.1.0/27",
            "metadata": {
                "description": "Address prefix for the private link subnet"
            }
        },
        "scriptSubnetName": {
            "type": "string",
            "defaultValue": "script-subnet",
            "metadata": {
                "description": "Name of the subnet to attach the deployment script container to"
            }
        },
        "scriptSubnetCidr": {
            "type": "string",
            "defaultValue": "10.0.1.32/27",
            "metadata": {
                "description": "Address prefix for the script subnet"
            }
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for resources"
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Github branch for linked deployments."
            }
        }
    },
    "variables": {
        "baseUrl": "[uri('https://raw.githubusercontent.com/IBM/azure-marketplace-arm-templates/',parameters('branch'))]"
    },
    "resources": [
        // GUID deployment
        // ACR with endpoint subnet
        // AKS with nsg and aks subnet
        // SIP
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "virtualNetwork",
            "resourceGroup": "[parameters('networkResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vnetCIDR": {
                        "value": "[parameters('vnetCIDR')]"
                    },
                    "existingVnet": {
                        "value": "[parameters('existingVnet')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetCIDR": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "existingVnet": {
                            "type": "bool"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2022-07-01",
                            "name": "[parameters('vnetName')]",
                            "condition": "[not(parameters('existingVnet'))]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), parameters('tagsByResource')['Microsoft.Network/virtualNetworks'], json('{}')) ]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('vnetCIDR')]"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "scriptPrerequisites",
            "condition": "[parameters('deployPrereqs')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('scriptStorageAccountName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "networkResourceGroup": {
                        "value": "[parameters('networkResourceGroup')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('scriptSubnetName')]"
                    },
                    "subnetCidr": {
                        "value": "[parameters('scriptSubnetCidr')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'),'/sterling/script-prerequisites/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "deployKeyVault",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'),'/sterling/keyvault/azuredeploy.json'))]",
                    "contentVersion":"1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "createSshKey",
            "comments": "Creates a new SSH key and stores in keyvault if no public key is provided",
            "condition": "[equals(parameters('publicSshKey'), '')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployKeyVault')]",
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('scriptStorageAccountName')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "keyName": {
                        "value": "[parameters('keyName')]"
                    },
                    "createManagedId": {
                        "value": false
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "rgRoleGuid": {
                        "value": "[parameters('sshKeyScriptGuid')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'),'/sterling/ssh-key/azuredeploy.json'))]",
                    "contentVersion":"1.0.0.0"
                }
            }
        }
    ]
}