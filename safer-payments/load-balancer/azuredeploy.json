{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "metadata": {
                "description": "Name prefix for created resources"
            }
        },
        "lbName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'), '-lb')]",
            "metadata": {
                "description": "Name of the load balancer"
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Basic",
                "Gateway",
                "Standard"
            ],
            "metadata": {
                "description": "Load balancer and public IP SKU"
            }
        },
        "tier": {
            "type": "string",
            "defaultValue": "Regional",
            "allowedValues": [
                "Global",
                "Regional"
            ],
            "metadata": {
                "description": "Load balancer and public IP tier"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location (region) for the load balancer"
            }
        },
        "publicOrPrivate": {
            "type": "string",
            "defaultValue": "Public",
            "allowedValues": [
                "Public",
                "Private"
            ],
            "metadata": {
                "description": "Flag for whether load balancer has a public IP interface or only private"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "Name of the virtual network for the private load balancer frontend if applicable"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "vm-subnet",
            "metadata": {
                "description": "Name of the subnet for private load balancer frontend if applicable"
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "[concat( parameters('namePrefix'), substring(resourceGroup().id, 1, 5) )]",
            "metadata": {
                "description": "Domain name of the public IP address"
            }
        },
        "publicIpName": {
            "type": "string",
            "defaultValue": "[concat( parameters('namePrefix') , '-pip')]",
            "metadata": {
                "description": "Name of the public IP"
            }
        }
    },
    "variables": {
        "lbFrontendName": "[concat( parameters('lbName'), '-frontend')]",
        "lbFrontendId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('lbName'), variables('lbFrontendName'))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnetName'))]",
        "frontendIPConfig": {
            "Public": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIpName'))]"
                }
            },
            "Private": {
                "subnet": {
                    "id": "[variables('subnetRef')]"
                }
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-11-01",
            "condition": "[if( equals(parameters('publicOrPrivate'),'Public'), true(), false() )]",
            "name": "[parameters('publicIpName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]",
                "tier": "[parameters('tier')]"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "ddosSettings": {   // TODO: Add ddos VNet inheritance

                },
                "dnsSettings": {
                    "domainNameLabel": "[parameters('domainName')]"
                },
                "publicIPAllocationMethod": "Static",
                "deleteOption": "Delete",
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2022-11-01",
            "name": "[parameters('lbName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
            ],
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]",
                "tier": "[parameters('tier')]"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFrontendName')]",
                        "properties": "[variables('frontendIPConfig')[parameters('publicOrPrivate')]]"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[concat( parameters('lbName'), '-backend')]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2022-11-01",
            "name": "[concat( parameters('lbName'), '/InboundPort8001' )]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('lbName'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[variables('lbFrontendId')]"
                },
                "frontendPort": "8001",
                "backendPort": "8001",
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2022-11-01",
            "name": "[concat( parameters('lbName'), '/InboundPort8002' )]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('lbName'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[variables('lbFrontendId')]"
                },
                "frontendPort": "8002",
                "backendPort": "8002",
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2022-11-01",
            "name": "[concat( parameters('lbName'), '/InboundPort8003' )]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('lbName'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[variables('lbFrontendId')]"
                },
                "frontendPort": "8003",
                "backendPort": "8003",
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 4,
                "protocol": "Tcp",
                "enableTcpReset": false
            }
        }
    ],
    "outputs": {
        "fqdn": {
            "type": "string",
            "condition": "[if( equals( parameters('publicOrPrivate'), 'Public' ), true(), false() )]",
            "value": "[reference(parameters('publicIpName')).dnsSettings.fqdn]"
        }
    }
}