---
- name: Install Instana standard on a RHEL virtual machine
  hosts: localhost
  gather_facts: yes
  become: true

  vars:
    instana:
      download_key: ""
      sales_key: ""
      tenant_name: ""
      unit_name: ""
      accept_license: false
      admin_password: ""
    tls:
      cert: ""
      key: ""
    vm:
    disks:
      - name: data
        size: "500.00 GB"
        mount_point: "/mnt/instana/stanctl/data"
      - name: metrics
        size: "1000.00 GB"
        mount_point: "/mnt/instana/stanctl/metrics"
      - name: analytics
        size: "1200.00 GB"
        mount_point: "/mnt/instana/stanctl/analytics"  
      - name: objects
        size: "1000.00 GB"
        mount_point: "/mnt/instana/stanctl/objects"           
    dir:
      tmp_dir: "/tmp"
      bin_dir: "/usr/local/bin"


  tasks: 
  
  - name: Install required packages if not already in place
    ansible.builtin.package:
      name: 
        - parted
      state: latest  

  - name: Prepare additional disks
    ansible.builtin.include_tasks:
      file: ./prepare-disks.yaml
    loop: "{{ disks }}"
    loop_control:
      loop_var: disk

  - name: Configure kernel parameters - vm.swappiness
    ansible.builtin.shell: |
      set timeout 300
      sh -c 'echo vm.swappiness=0 >> /etc/sysctl.d/99-stanctl.conf'
      sysctl -p /etc/sysctl.d/99-stanctl.conf
      exit 0
    args:
      executable: /bin/bash
    
  - name: Configure kernel parameters - vm.swappiness
    ansible.builtin.shell: |
      set timeout 300
      sh -c 'echo fs.inotify.max_user_instances=8192 >> /etc/sysctl.d/99-stanctl.conf'
      sysctl -p /etc/sysctl.d/99-stanctl.conf
      exit 0
    args:
      executable: /bin/bash 

  - name: Configure kernel parameters - transparent hub pages
    ansible.builtin.shell: |
      set timeout 300
      grubby --args="transparent_hugepage=never" --update-kernel ALL
      exit 0
    args:
      executable: /bin/bash 

  - name: Add bin directory (for RHEL)
    ansible.builtin.shell: echo 'export PATH=$PATH:/usr/local/bin' >> ~root/.bashrc
    args:
      executable: /bin/bash

  - name: Add firewall rules
    ansible.builtin.shell: |
      set timeout 300
      firewall-cmd --permanent --add-port=22/tcp
      firewall-cmd --permanent --add-port=80/tcp
      firewall-cmd --permanent --add-port=443/tcp
      firewall-cmd --permanent --add-port=6443/tcp
      firewall-cmd --permanent --add-port=8443/tcp
      firewall-cmd --permanent --add-port=10250/tcp
      firewall-cmd --permanent --zone=trusted --add-source=10.42.0.0/16
      firewall-cmd --permanent --zone=trusted --add-source=10.43.0.0/16
      firewall-cmd --reload
      exit 0
    args:
      executable: /bin/bash


  - name: Add Instana repository
    ansible.builtin.template:
      src: "./instana-product.repo.j2"
      dest: "/etc/yum.repos.d/Instana-Product.repo"

  - name: Install stanctl command-line tool
    ansible.builtin.package:
      name: 
        - stanctl
      state: latest

  - name: Install Instana
    ansible.builtin.shell: |
      set timeout 3000
      stanctl up --install-type production \
        --download-key {{ instana.download_key }} \
        --sales-key {{ instana.sales_key }} \
        --unit-tenant-name {{ instana.tenant_name }} \
        --unit-unit-name {{ instana.unit_name }} \
        --unit-initial-admin-password {{ instana.admin_password }}
        --quiet
      exit 0
    args:
      command: /bin/bash
    when: accept_license


