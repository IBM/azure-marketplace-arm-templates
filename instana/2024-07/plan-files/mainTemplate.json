{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "defaultValue": "instana",
            "metadata": {
                "description": "Prefix for resource names"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for deployment container"
            }
        },
        "registerDeployment": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Excludes the deployment registration to the partner portal if set to false (debug only)"
            }
        },
        "updateDNSZone": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to update the DNS zone with the Instana requirements (debug only)"
            }
        },
        "deployInstana": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the Instana VM and Instana application (debug only)"
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group holding the VNet."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "Name of the virtual network containing the subnet to attach to."
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/20",
            "metadata": {
                "description": "Address prefix for the new or existing virtual network"
            }
        },
        "vnetNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Determines whether the VNet needs to be created or using an existing one"
            }
        },
        "enableDdosProtection": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether to enable DDoS protection for the virtual network"
            }
        },
        "existingDdosPlan": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether to create a new DDoS protection service or use an existing one."
            }
        },
        "ddosProtectionPlanName": {
            "type": "string",
            "defaultValue": "Instana-DDoS-Plan",
            "metadata": {
                "description": "DDoS protection plan name to be used if DDoS is enabled"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-subnet')]",
            "metadata": {
                "description": "Name of the subnet to attach the deployment script container to. Used for private vnet."
            }
        },
        "subnetCidr": {
            "type": "string",
            "defaultValue": "10.0.1.0/27",
            "metadata": {
                "description": "Network address of the subnet to attach the deployment script container to"
            }
        },
        "installType": {
            "type": "string",
            "allowedValues": [
                "production",
                "demo"
            ],
            "metadata": {
                "description": "Type of Instana installation."
            }
        },
        "downloadKey": {
            "type": "secureString",
            "metadata": {
                "description": "Instana download key"
            }
        },
        "salesKey": {
            "type": "secureString",
            "metadata": {
                "description": "Instana sales key"
            }
        },
        "instanaPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Instana administrator password"
            }
        },
        "tenantName": {
            "type": "string",
            "metadata": {
                "description": "Tenant name for Instana"
            }
        },
        "unitName": {
            "type": "string",
            "metadata": {
                "description": "Unit name for Instana"
            }
        },
        "acceptLicense": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag for Instana license acceptance"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-vm')]",
            "metadata": {
                "description": "Name for the Azure virtual machine"
            }
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Admin user for created VMs"
            }
        },
        "adminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine."
            }
        },
        "authType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of VM authentication. SSH Key or Password"
            }
        },
        "securityType": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "TrustedLaunch"
            ],
            "metadata": {
                "description": "Security type for virtual machine (trusted launch not supported with RHEL)"
            }
        },
        "vmNsgSecurityRules": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "AllowSSHInbound",
                    "properties": {
                        "priority": 300,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "22"
                    }
                },
                {
                    "name": "AllowHTTPSInbound",
                    "properties": {
                        "priority": 301,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "443"
                    }
                },
                {
                    "name": "AllowPort8443Inbound",
                    "properties": {
                        "priority": 302,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "8443"
                    }
                }
            ]
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D16s_v3",
            "metadata": {
                "description": "Size of Virtual Machine"
            }
        },
        "vmDiskType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "metadata": {
                "description": "OS Disk type for Dev VM"
            }
        },
        "vmZone": {
            "type": "string",
            "defaultValue": "1",
            "allowedValues": [
                "1", "2", "3"
            ],
            "metadata": {
                "description": "Availability zone for the VM"
            }
        },
        "vmOSVersion": {
            "type": "string",
            "defaultValue": "RHEL 9.2",
            "allowedValues": [
                "RHEL 8.6",
                "RHEL 8.7",
                "RHEL 9.2"
            ],
            "metadata": {
                "description": "Operating system version"
            }
        },
        "storageSKU": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "metadata": {
                "description": "OS Disk type for deployment VM"
            }
        },
        "osDiskSize": {
            "type": "int",
            "minValue": 200,
            "defaultValue": 200,
            "metadata": {
               "description": "Size of the OS Disk (GB)" 
            }
        },
        "dataDiskSize": {
            "type": "int",
            "defaultValue": 150,
            "minValue": 150,
            "metadata": {
                "description": "Size of the data directory (GB)"
            }
        },
        "metricsDiskSize": {
            "type": "int",
            "defaultValue": 300,
            "minValue": 300,
            "metadata": {
                "description": "Size of the metrics directory (GB)"
            }
        },
        "analyticsDiskSize": {
            "type": "int",
            "defaultValue": 500,
            "minValue": 500,
            "metadata": {
                "description": "Size of the analytics directory (GB)"
            }
        },
        "objectsDiskSize": {
            "type": "int",
            "defaultValue": 500,
            "minValue": 250,
            "metadata": {
                "description": "Size of the objects directory (GB)"
            }
        },
        "publicIpNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Flag to determine whether the public IP is existing or not"
            }
        },
        "publicIpResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group for public IP address if using an existing one"
            }
        },
        "publicIPName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-pip')]",
            "metadata": {
                "description": "Name for the public IP address if creating."
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "[toLower( concat(parameters('namePrefix'),uniqueString(resourceGroup().name)) )]",
            "metadata": {
                "description": "Domain name prefix for the public IP address"
            }
        },
        "instanaDomain": {
            "type": "string",
            "defaultValue": "[concat(parameters('domainName'),'.',parameters('dnsZoneName'))]",
            "metadata": {
                "description": "FQDN for the Instana public IP"
            }
        },
        "dnsZoneResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The resource group for the DNS Zone"
            }
        },
        "dnsZoneName": {
            "type": "string",
            "metadata": {
                "description": "Name of the DNS Zone to be updated with the Instana public IP domain"
            }
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for the resources"
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "GitHub branch for linked deployments."
            }
        },
        "deploymentVersion": {
            "type": "string",
            "defaultValue": "2024-07",
            "metadata": {
                "description": "Deployment version to use"
            }
        },
        "logLevel": {
            "type": "string",
            "defaultValue": "info",
            "allowedValues": [
                "info",
                "debug"
            ],
            "metadata": {
                "description": "Log level for Ansible playbook"
            }
        }
    },
    "variables": {
        "baseUrl": "[uri('https://raw.githubusercontent.com/IBM/azure-marketplace-arm-templates/',parameters('branch'))]",
        "ddosProtectionPlan": {
            "id": "[resourceId('Microsoft.Network/ddosProtectionPlans', parameters('ddosProtectionPlanName'))]"
        }
    },
    "resources": [
        { 
            "apiVersion": "2021-04-01",
            "comments": "This is the deployment identifier for Instana",
            "condition": "[parameters('registerDeployment')]",
            "name": "pid-1b34a8ac-b40e-4675-bbf8-621ebbc6ae0a", 
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Network/ddosProtectionPlans",
            "apiVersion": "2023-04-01",
            "name": "[parameters('ddosProtectionPlanName')]",
            "condition": "[and(parameters('enableDdosProtection'),not(parameters('existingDdosPlan')))]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/ddosProtectionPlans'), parameters('tagsByResource')['Microsoft.Network/ddosProtectionPlans'], json('{}')) ]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "name": "virtualNetwork",
            "dependsOn": [
                "[resourceId('Microsoft.Network/ddosProtectionPlans', parameters('ddosProtectionPlanName'))]"
            ],
            "resourceGroup": "[parameters('networkResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetCIDR": {
                        "value": "[parameters('vnetCIDR')]" 
                    },
                    "enableDdosProtection": {
                        "value": "[parameters('enableDdosProtection')]"
                    },
                    "ddosProtectionPlan": {
                        "value": "[variables('ddosProtectionPlan')]" 
                    },
                    "subnetName": {
                        "value": "[parameters('subnetName')]"
                    },
                    "subnetCIDR": {
                        "value": "[parameters('subnetCidr')]"
                    },
                    "existingVnet": {
                        "value": "[equals(parameters('vnetNewOrExisting'), 'existing')]" 
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetCIDR": {
                            "type": "string"
                        },
                        "enableDdosProtection": {
                            "type": "bool"
                        },
                        "ddosProtectionPlan": {
                            "type": "object"
                        },
                        "subnetName": {
                            "type": "string"
                        },
                        "subnetCIDR": {
                            "type": "string"
                        },
                        "existingVnet": {
                            "type": "bool"
                        },
                        "location": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2022-07-01",
                            "name": "[parameters('vnetName')]",
                            "condition": "[not(parameters('existingVnet'))]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), parameters('tagsByResource')['Microsoft.Network/virtualNetworks'], json('{}')) ]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('vnetCIDR')]"
                                    ]
                                },
                                "enableDdosProtection": "[parameters('enableDdosProtection')]",
                                "ddosProtectionPlan": "[if(parameters('enableDdosProtection'),parameters('ddosProtectionPlan'),json('null'))]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2023-04-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                            ],
                            "name": "[concat(parameters('vnetName'), '/' ,parameters('subnetName'))]",
                            "properties": {
                                "addressPrefix": "[parameters('subnetCIDR')]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-07-01",
            "condition": "[equals(parameters('publicIpNewOrExisting'),'new')]",
            "name": "[parameters('publicIPName')]",
            "location": "[parameters('location')]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), parameters('tagsByResource')['Microsoft.Network/publicIPAddresses'], json('{}')) ]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "publicIPAllocationMethod": "Static",
                "deleteOption": "Delete",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('domainName')]"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",  
            "dependsOn": [
               "[resourceId(parameters('networkResourceGroup'),'Microsoft.Resources/deployments', 'virtualNetwork')]" 
            ],
            "name": "createVM",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "virtualNetworkResourceGroupName": {
                        "value": "[parameters('networkResourceGroup')]" 
                    },
                    "subnetName": {
                        "value": "[parameters('subnetName')]" 
                    },
                    "publicIpNewOrExisting": {
                        "value": "[parameters('publicIpNewOrExisting')]"
                    },
                    "publicIpResourceGroup": {
                        "value": "[parameters('publicIpResourceGroup')]" 
                    },
                    "publicIPName": {
                        "value": "[parameters('publicIPName')]" 
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]" 
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vmZone": {
                        "value": "[parameters('vmZone')]"
                    },
                    "vmOSVersion": {
                        "value": "[parameters('vmOSVersion')]"
                    },
                    "storageSKU": {
                        "value": "[parameters('storageSKU')]"
                    },
                    "osDiskSize": {
                        "value": "[parameters('osDiskSize')]" 
                    },
                    "dataDiskSize": {
                        "value": "[parameters('dataDiskSize')]"
                    },
                    "analyticsDiskSize": {
                        "value": "[parameters('analyticsDiskSize')]"
                    },
                    "metricsDiskSize": {
                        "value": "[parameters('metricsDiskSize')]"
                    },
                    "objectsDiskSize": {
                        "value": "[parameters('objectsDiskSize')]"
                    },
                    "vmNsgSecurityRules": {
                        "value": "[parameters('vmNSGSecurityRules')]"
                    },
                    "securityType": {
                        "value": "[parameters('securityType')]"
                    },
                    "authType": {
                        "value": "[parameters('authType')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('adminUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]" 
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                    
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "namePrefix": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "vmName": {
                            "type": "string"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "virtualNetworkResourceGroupName": {
                            "type": "string"
                        },
                        "subnetName": {
                            "type": "string"
                        },
                        "adminUserName": {
                            "type": "string"
                        },
                        "adminPassword": {
                            "type": "secureString"
                        },
                        "authType": {
                            "type": "string"
                        },
                        "securityType": {
                            "type": "string"
                        },
                        "vmNsgSecurityRules": {
                            "type": "array"
                        },
                        "vmSize": {
                            "type": "string"
                        },
                        "storageSKU": {
                            "type": "string"
                        },
                        "osDiskSize": {
                            "type": "int"
                        },
                        "dataDiskSize": {
                            "type": "int"
                        },
                        "metricsDiskSize": {
                            "type": "int"
                        },
                        "analyticsDiskSize": {
                            "type": "int"
                        },
                        "objectsDiskSize": {
                            "type": "int"
                        },
                        "vmZone": {
                            "type": "string"
                        },
                        "vmOSVersion": {
                            "type": "string"
                        },
                        "publicIpNewOrExisting": {
                            "type": "string"
                        },
                        "publicIpResourceGroup": {
                            "type": "string"
                        },
                        "publicIPName": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "nsgName": "[concat(parameters('namePrefix'), '-nsg')]",
                        "nicName": "[concat(parameters('namePrefix'),'-nic')]",
                        "linuxConfigSSH": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                                        "keyData": "[parameters('adminPassword')]"
                                    }
                                ]
                            }
                        },
                        "linuxConfigPWD": {
                            "disablePasswordAuthentication": false
                        },
                        "imageReference": {
                            "RHEL 8.6": {
                                "publisher": "RedHat",
                                "offer": "RHEL",
                                "sku": "8_6",
                                "version": "latest"
                            },
                            "RHEL 8.7": {
                                "publisher": "RedHat",
                                "offer": "RHEL",
                                "sku": "8_7",
                                "version": "latest"
                            },
                            "RHEL 9.2": {
                                "publisher": "RedHat",
                                "offer": "RHEL",
                                "sku": "9_2",
                                "version": "latest"
                            }
                        },
                        "vmBootstrap": "[concat('#cloud-config\npackage_upgrade: true\npackages:\n- python3.11\n- python3.11-pip\nruncmd:\n- python3.11 -m pip install ansible-core==2.16.3')]",
                        "securityProfile": {
                            "uefiSettings": {
                                "secureBootEnabled": false,
                                "vTpmEnabled": false
                            },
                            "securityType": "[parameters('securityType')]"
                        },
                        "publicIpId": {
                            "new": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
                            },
                            "existing": {
                                "id": "[resourceId(parameters('publicIpResourceGroup'),'Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
                            }
                        },
                        "vnetId": "[resourceId(parameters('virtualNetworkResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
                        "subnetId": "[concat(variables('vnetId'),'/subnets/',parameters('subnetName'))]"
                    },
                    "resources": [                 
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2022-07-01",
                            "name": "[variables('nsgName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), parameters('tagsByResource')['Microsoft.Network/networkSecurityGroups'], json('{}')) ]",
                            "properties": {
                                "securityRules": "[parameters('vmNsgSecurityRules')]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2022-07-01",
                            "name": "[variables('nicName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkInterfaces'), parameters('tagsByResource')['Microsoft.Network/networkInterfaces'], json('{}')) ]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "subnet": {
                                                "id": "[variables('subnetId')]"
                                            },
                                            "publicIPAddress": "[variables('publicIpId')[parameters('publicIpNewOrExisting')]]",
                                            "privateIPAllocationMethod": "Dynamic"
                                        }
                                    }
                                ],
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
                            ]
                        },
                            {
                                "type": "Microsoft.Compute/virtualMachines",
                                "apiVersion": "2021-03-01",
                                "name": "[parameters('vmName')]",
                                "location": "[parameters('location')]",
                                "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), parameters('tagsByResource')['Microsoft.Compute/virtualMachines'], json('{}')) ]",
                                "properties": {
                                    "hardwareProfile": {
                                        "vmSize": "[parameters('vmSize')]"
                                    },
                                    "storageProfile": {
                                        "osDisk": {
                                            "createOption": "FromImage",
                                            "diskSizeGB": "[parameters('osDiskSize')]",
                                            "managedDisk": {
                                                "storageAccountType": "[parameters('storageSKU')]"
                                            }
                                        },
                                        "dataDisks": [
                                            {
                                                "name": "[concat(parameters('namePrefix'),'-data-disk')]",
                                                "caching": "None",
                                                "createOption": "Empty",
                                                "deleteOption": "Delete",
                                                "diskSizeGB": "[parameters('dataDiskSize')]",
                                                "lun": 0,
                                                "managedDisk": {
                                                    "storageAccountType": "[parameters('storageSKU')]"
                                                }
                                            },
                                            {
                                                "name": "[concat(parameters('namePrefix'),'-metrics-disk')]",
                                                "caching": "None",
                                                "createOption": "Empty",
                                                "deleteOption": "Delete",
                                                "diskSizeGB": "[parameters('metricsDiskSize')]",
                                                "lun": 1,
                                                "managedDisk": {
                                                    "storageAccountType": "[parameters('storageSKU')]"
                                                }
                                            },
                                            {
                                                "name": "[concat(parameters('namePrefix'),'-analytics-disk')]",
                                                "caching": "None",
                                                "createOption": "Empty",
                                                "deleteOption": "Delete",
                                                "diskSizeGB": "[parameters('analyticsDiskSize')]",
                                                "lun": 2,
                                                "managedDisk": {
                                                    "storageAccountType": "[parameters('storageSKU')]"
                                                }
                                            },
                                            {
                                                "name": "[concat(parameters('namePrefix'),'-objects-disk')]",
                                                "caching": "None",
                                                "createOption": "Empty",
                                                "deleteOption": "Delete",
                                                "diskSizeGB": "[parameters('objectsDiskSize')]",
                                                "lun": 3,
                                                "managedDisk": {
                                                    "storageAccountType": "[parameters('storageSKU')]"
                                                }
                                            }
                                        ],
                                        "imageReference": "[variables('imageReference')[parameters('vmOSVersion')]]"
                                    },
                                    "networkProfile": {
                                        "networkInterfaces": [
                                            {
                                                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                                            }
                                        ]
                                    },
                                    "osProfile": {
                                        "computerName": "[parameters('vmName')]",
                                        "adminUsername": "[parameters('adminUserName')]",
                                        "adminPassword": "[parameters('adminPassword')]",
                                        "customData": "[base64(variables('vmBootstrap'))]",
                                        "linuxConfiguration": "[if(equals(parameters('authType'), 'sshPublicKey'), variables('linuxConfigSSH'), variables('linuxConfigPWD'))]"
                                    },
                                    "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'),variables('securityProfile'),json('null'))]",
                                    "diagnosticsProfile": {
                                        "bootDiagnostics": {
                                            "enabled": true
                                        }
                                    }
                                },
                                "zones": [
                                    "[parameters('vmZone')]"
                                ],
                                "dependsOn": [
                                    "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                                ]
                            }
                    ],
                    "outputs": {
                        "vmName": {
                            "type": "string",
                            "value": "[parameters('vmName')]"
                        },
                        "internalIP": {
                            "type": "string",
                            "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('nicName')), '2022-07-01').ipConfigurations[0].properties.privateIPAddress]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('updateDNSZone')]",    
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
            ],
            "name": "updateDNSZone",
            "resourceGroup": "[parameters('dnsZoneResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "zoneName": {
                        "value": "[parameters('dnsZoneName')]" 
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "ipAddress": {
                        "value": "[reference(resourceId(parameters('publicIpResourceGroup'),'Microsoft.Network/publicIPAddresses', parameters('publicIPName')),'2022-07-01').ipAddress]" 
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "zoneName": {
                            "type": "string"
                        },
                        "domainName": {
                            "type": "string"
                        },
                        "ipAddress": {
                            "type": "string"
                        }
                    },
                    "variables": {

                    },
                    "resources": [
                            {
                                "type": "Microsoft.Network/dnsZones/A",
                                "apiVersion": "2018-05-01",
                                "name": "[format('{0}/{1}', parameters('zoneName'), parameters('domainName'))]",
                                "properties": {
                                    "TTL": 3600,
                                    "ARecords": [
                                        {
                                            "ipv4Address": "[parameters('ipAddress')]"
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "Microsoft.Network/dnsZones/A",
                                "apiVersion": "2018-05-01",
                                "name": "[format('{0}/{1}', parameters('zoneName'), concat('*.',parameters('domainName')))]",
                                "properties": {
                                    "TTL": 3600,
                                    "ARecords": [
                                        {
                                            "ipv4Address": "[parameters('ipAddress')]"
                                        }
                                    ]
                                }
                            }
                    ]
                }
            }   
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployInstana')]",
            "dependsOn": [
                "[resourceId(parameters('networkResourceGroup'),'Microsoft.Resources/deployments', 'virtualNetwork')]"
            ],
            "name": "instanaDeployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/instana/',parameters('deploymentVersion'),'/deploy-instana-standard/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "installType": {
                        "value": "[parameters('installType')]"
                    },
                    "downloadKey": {
                        "value": "[parameters('downloadKey')]"
                    },
                    "salesKey": {
                        "value": "[parameters('salesKey')]"
                    },
                    "instanaPassword": {
                        "value": "[parameters('instanaPassword')]"
                    },
                    "tenantName": {
                        "value": "[parameters('tenantName')]"
                    },
                    "unitName": {
                        "value": "[parameters('unitName')]"
                    },
                    "instanaDomain": {
                        "value": "[parameters('instanaDomain')]"
                    },
                    "acceptLicense": {
                        "value": "[parameters('acceptLicense')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "dataDiskSize": {
                        "value": "[parameters('dataDiskSize')]"
                    },
                    "metricsDiskSize": {
                        "value": "[parameters('metricsDiskSize')]"
                    },
                    "analyticsDiskSize": {
                        "value": "[parameters('analyticsDiskSize')]"
                    },
                    "objectsDiskSize": {
                        "value": "[parameters('objectsDiskSize')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "deployInstana": {
                        "value": true
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        }
    ]
}