{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix for resource names"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure location for resources"
            }
        },
        "registerDeployment": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag for whether to register the deployment in partner center (debug only)"
            }
        },
        "deployARO": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy a new ARO cluster (debug only)"
            }
        },
        "deployVM": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the deployment VM (debug only)"
            }
        },
        "installCpdCli": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to install cpd cli on the deployment VM (debug only)"
            }
        },
        "configureOpenShift": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flaf to determine whether to configure OpenShift for watsonx (debug only)"
            }
        },
        "deployODF": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy ODF (debug only)"
            }
        },
        "deployNFD": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the Red Hat NFD tool (debug only)"
            }
        },
        "deployRHOpenShiftAI": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy Red Hat OpenShift AI (debug only)"
            }
        },
        "deployNvidiaDriver": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the Nvidia Driver (debug only)"
            }
        },
        "deployCpdBase": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the Nvidia Driver (debug only)"
            }
        },
        "deployWatsonxBase": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the base watsonx.ai operator and operands (debug only)"
            }
        },
        "createGPUMachineset": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create the GPU machineset (debug only)"
            }
        },
        "deployLLM": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the foundation model/s (debug only)"
            }
        },
        "apiVisibility": {
            "type": "string",
            "allowedValues": [
                "Public",
                "Private"
            ],
            "defaultValue": "Private",
            "metadata": {
                "description": "Public or Private API endpoint"
            }
        },
        "ingressVisibility": {
            "type": "string",
            "allowedValues": [
                "Public",
                "Private"
            ],
            "defaultValue": "Public",
            "metadata": {
                "description": "Public or Private workload ingress endpoint"
            }
        },
        "clusterName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'), '-aro')]",
            "metadata": {
                "description": "Name for the ARO cluster"
            }
        },
        "aroVersion": {
            "type": "string",
            "defaultValue": "4.14.16",
            "metadata": {
                "description": "Version of ARO to deploy. Format 4.x.x"
            }
        },
        "spClientId" : {
            "type": "string",
            "metadata": {
                "description" : "The app ID of the Service Principal (client id)"
            }
        },
        "spClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The service principal secret key."
            }
        },
        "spObjectId": {
            "type": "String",
            "metadata": {
                "description": "The ObjectID of the Service Principal"
            }
        },
        "rpObjectId": {
            "type": "string",
            "metadata": {
                "description": "Red Hat OpenShift Resource Provider Object Id - obtain using (az ad sp list --display-name \"Azure Red Hat OpenShift RP\" --query \"[0].id\" -o tsv)"
            }
        },
        "pullSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Red Hat OpenShift Pull Secret"
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Github branch for linked deployments."
            }
        },
        "deploymentVersion": {
            "type": "string",
            "defaultValue": "2024-10",
            "metadata": {
                "description": "Deployment version to use"
            }
        },
        "existingVnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether the virtual network already exists"
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "The resource group containing the virtual network. Service principal must have permissions for this network."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/20",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "controlSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "CIDR for the control subnet"
            }
        },
        "workerSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "CIDR for the worker subnet"
            }
        },
        "controlSubnetName": {
            "type": "string",
            "defaultValue": "control-subnet",
            "metadata": {
                "description": "Name of the control / master subnet"
            }
        },
        "workerSubnetName": {
            "type": "string",
            "defaultValue": "worker-subnet",
            "metadata": {
                "description": "Name of the worker subnet"
            }
        },
        "vmSubnetName": {
            "type": "string",
            "defaultValue": "vm-subnet",
            "metadata": {
                "description": "Name of the subnet to attach the deployment / management VM to. Used for private vnet."
            }
        },
        "vmSubnetCidr": {
            "type": "string",
            "defaultValue": "10.0.3.0/27",
            "metadata": {
                "description": "Network address of the subnet to attach the deployment / management VM to"
            }
        },
        "domain": {
            "type": "string",
            "defaultValue": "[concat(toLower(first(parameters('namePrefix'))),substring(uniqueString(resourceGroup().id),1,7))]",
            "metadata": {
                "description": "Domain name prefix for the ARO cluster. Default is generated from resource group id."
            }
        },
        "podCIDR": {
            "type": "string",
            "defaultValue": "10.128.0.0/14",
            "metadata": {
                "description": "CIDR for the POD virtual subnet within the cluster"
            }
        },
        "serviceCIDR": {
            "type": "string",
            "defaultValue": "172.30.0.0/16",
            "metadata": {
                "description": "CIDR for the service virtual subnet within the cluster"
            }
        },
        "masterSize": {
            "type": "string",
            "defaultValue": "Standard_D8s_v3",
            "metadata": {
                "description": "VM size for master/control nodes"
            }
        },
        "workerSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "VM size for worker nodes"
            }
        },
        "workerCount": {
            "type": "int",
            "defaultValue": 3,
            "minValue": 3,
            "maxValue": 2000,
            "metadata": {
                "description": "Number of compute nodes to deploy"
            }
        },
        "encryption" : {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to encrypt storage at rest"
            }
        },
        "workerDiskSize": {
            "type": "int",
            "defaultValue": 128,
            "minValue": 128,
            "maxValue": 32767,
            "metadata": {
                "description": "Size of system disk on each worker node"
            }
        },
        "ibmEntitlementKey": {
            "type": "securestring",
            "metadata": {
                "description": "Entitlement key for IBM container registry"
            }
        },
        "acceptLicense": {
            "type": "string",
            "defaultValue": "decline",
            "allowedValues": [
                "accept",
                "decline"
            ],
            "metadata": {
                "description": "Accept Red Hat and IBM License Terms to instantiate software."
            }
        },
        "cpdVersion": {
            "type": "string",
            "defaultValue": "5.0.3",
            "metadata": {
                "description": "IBM Cloud Pak for Data version to be installed"
            }
        },
        "cpdCliVersion": {
            "type": "string",
            "defaultValue": "14.0.3",
            "metadata": {
                "description": "Version of CPD CLI to install. Refer to https://github.com/IBM/cpd-cli"
            }
        },
        "cpdEdition": {
            "type": "string",
            "defaultValue": "EE",
            "allowedValues": [
                "EE",
                "SE"
            ],
            "metadata": {
                "description": "CPD Edition, Enterprise (EE) or Standard (SE)"
            }
        },
        "cpdOperatorNamespace": {
            "type": "string",
            "defaultValue": "cpd-operator",
            "metadata": {
                "description": "IBM Cloud Pak for Data operator namespace"
            }
        },
        "cpdOperandsNamespace": {
            "type": "string",
            "defaultValue": "cpd-instance",
            "metadata": {
                "description": "Namespace for IBM Cloud Pak for Data operands"
            }
        },
        "certManagerNamespace": {
            "type": "string",
            "defaultValue": "ibm-cert-manager",
            "metadata": {
                "description": "Namespace for the cert manager operator"
            } 
        },
        "schedulingServiceNamespace": {
            "type": "string",
            "defaultValue": "ibm-cpd-scheduler",
            "metadata": {
                "description": "Namespace for the scheduling service operator"
            } 
        },
        "licensingServiceNamespace": {
            "type": "string",
            "defaultValue": "ibm-licensing",
            "metadata": {
                "description": "Namespace for the licensing service operator"
            }
        },
        "tuningEnabled": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Specify whether prompt tuning is available"
            }
        },
        "liteVersion": {
            "type": "string",
            "defaultValue": "true",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Specify whether to deploy the light weight watsonx.ai version"
            }
        },
        "llmList": {
            "type": "object",
            "defaultValue": ["ibm-granite-13b-chat-v2"],
            "metadata": {
                "description": "List of Foundation Models to deploy"
            }
        },
        "cpdWorkspace": {
            "type": "string",
            "defaultValue": "/root/cpd-cli-workspace",
            "metadata": {
                "description": "Location of the CPD CLI workspace"
            }
        },
        "rhOpenShiftAiChannel": {
            "type": "string",
            "defaultValue": "stable-2.13",
            "metadata": {
                "description": "Channel subscription for Red Hat OpenShift AI. Note watsonx.ai version 5.0.3 requires >2.11"
            }
        },
        "odfClusterSize": {
            "type": "string",
            "defaultValue": "1Ti",
            "metadata": {
                "description": "Size of the ODF storage cluster to create"
            }
        },
        "odfExistingNodes": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether to use existing worker nodes or create new dedicated ones for ODF"
            }
        },
        "blockStorageClass": {
            "type": "string",
            "defaultValue": "ocs-storagecluster-ceph-rbd",
            "metadata": {
                "description": "Name of the block type storage class in OpenShift to use"
            }
        },
        "fileStorageClass": {
            "type": "string",
            "defaultValue": "ocs-storagecluster-cephfs",
            "metadata": {
                "description": "Name of the file type storage class in OpenShift to use"
            }
        },
        "gpuNodeType": {
            "type": "string",
            "defaultValue": "Standard_NC24ads_A100_v4",
            "metadata": {
                "description": "Type of GPU node to be deployed"
            }
        },
        "gpuNodeQty": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of GPU nodes to deploy"
            }
        },
        "gpuNodeStorageType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "metadata": {
                "description": "Type of managed disk to be attached to the node"
            }
        },
        "gpuNodeDiskSize": {
            "type": "int",
            "defaultValue": 512,
            "metadata": {
                "description": "Size of the root disk for the GPU node"
            }
        },
        "gpuNodeName": {
            "type": "string",
            "defaultValue": "gpu",
            "metadata": {
                "description": "Machineset naming identifier"
            }
        },
        "gpuTaintNodes": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether GPU node/s can be used for non-GPU related workloads or not (taint/set true to prevent other workloads)"
            }
        },
        "gpuNodeZone": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "The Azure availability zone containing the GPU nodes. Set to zero to attempt to determine automatically. Refer to documentation to determine zone"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-vm')]",
            "metadata": {
                "description": "Name for the Azure virtual machine"
            }
        },
        "vmAdminUserName": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Admin user for created VMs"
            }
        },
        "vmAdminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine."
            }
        },
        "vmAuthType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of VM authentication. SSH Key or Password"
            }
        },
        "vmSecurityType": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "TrustedLaunch"
            ],
            "metadata": {
                "description": "Security type for virtual machine (trusted launch not supported with RHEL)"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_B2s",
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "metadata": {
                "description": "Size of Virtual Machine"
            }
        },
        "vmDiskType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_LRS",
                "StandardSSD_LRS",
                "StandardSSD_ZRS",
                "UltraSSD_LRS"
            ],
            "metadata": {
                "description": "OS Disk type for Dev VM"
            }
        },
        "vmOsDiskSize": {
            "type": "int",
            "defaultValue": 256,
            "metadata": {
                "description": "Size of the VM's OS Disk in GB"
            }
        },
        "vmZone": {
            "type": "string",
            "defaultValue": "1",
            "allowedValues": [
                "1", "2", "3"
            ],
            "metadata": {
                "description": "Availability zone for the VM"
            }
        },
        "vmOSVersion": {
            "type": "string",
            "defaultValue": "RHEL 9.2",
            "allowedValues": [
                "RHEL 9.2"
            ],
            "metadata": {
                "description": "Operating system version"
            }
        },
        "vmCreatePublicIP": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to indicate whether a public ip address should be created."
            }
        },
        "vmPublicIpNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Flag to determine whether the public IP is existing or not"
            }
        },
        "vmPublicIpResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group for public IP address if using an existing one"
            }
        },
        "vmPublicIPName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-pip')]",
            "metadata": {
                "description": "Name for the public IP address if creating."
            }
        },
        "vmDomainName": {
            "type": "string",
            "defaultValue": "[toLower( concat(parameters('namePrefix'),uniqueString(resourceGroup().name)) )]",
            "metadata": {
                "description": "Domain name prefix for the public IP address"
            }
        },
        "vmNSGSecurityRules": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "SSH",
                    "properties": {
                        "priority": 300,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "22"
                    }
                }
            ],
            "metadata": {
                "description": "Network security group rules for VM NIC (applicable when using public IP for deployment VM)"
            }
        },
        "vmExtensionName": {
            "type": "string",
            "defaultValue": "watsonx",
            "metadata": {
                "description": "Name of the VM Extension"
            }
        },
        "managedIdName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-id')]",
            "metadata": {
                "description": "Name of the managed Id to be used by the deployment VM"
            }
        },
        "logLevel": {
            "type": "string",
            "defaultValue": "info",
            "allowedValues": [
                "info",
                "debug"
            ],
            "metadata": {
                "description": "Log level for Ansible playbook (VM Approach)"
            }
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for the resources"
            }
        }
    },
    "variables": {
        "gitRepositoryUrl": "https://raw.githubusercontent.com/IBM/azure-marketplace-arm-templates/",
        "baseUrl": "[uri(variables('gitRepositoryUrl'),parameters('branch'))]",
        "gitRepoBaseDirectory": "/watsonx/",
        "aroRG": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('clusterName'))]",
        "contribRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "userAccessAdminRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
    },
    "resources": [
        { 
            "apiVersion": "2023-07-01",
            "name": "pid-watsonx-ai-partnercenter",
            "condition": "[parameters('registerDeployment')]", 
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "name": "virtualNetwork",
            "resourceGroup": "[parameters('networkResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vnetCIDR": {
                        "value": "[parameters('vnetCIDR')]"
                    },
                    "existingVnet": {
                        "value": "[parameters('existingVnet')]"
                    },
                    "controlSubnetCidr": {
                        "value": "[parameters('controlSubnetCIDR')]"
                    },
                    "controlSubnetName": {
                        "value": "[parameters('controlSubnetName')]"
                    },
                    "workerSubnetName": {
                        "value": "[parameters('workerSubnetName')]"
                    },
                    "workerSubnetCidr": {
                        "value": "[parameters('workerSubnetCIDR')]"
                    },
                    "vmSubnetName": {
                        "value": "[parameters('vmSubnetName')]"
                    },
                    "vmSubnetCidr": {
                        "value": "[parameters('vmSubnetCidr')]"
                    },
                    "rpObjectId": {
                        "value": "[parameters('rpObjectId')]"
                    },
                    "spObjectId": {
                        "value": "[parameters('spObjectId')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetCIDR": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "existingVnet": {
                            "type": "bool"
                        },
                        "controlSubnetName": {
                            "type": "string"
                        },
                        "controlSubnetCidr": {
                            "type": "string"
                        }, 
                        "workerSubnetName": {
                            "type": "string"
                        },
                        "workerSubnetCidr": {
                            "type": "string"
                        },
                        "vmSubnetName": {
                            "type": "string"
                        },
                        "vmSubnetCidr": {
                            "type": "string"
                        },
                        "rpObjectId": {
                            "type": "string"
                        },
                        "spObjectId": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "contribRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2023-04-01",
                            "name": "[parameters('vnetName')]",
                            "condition": "[not(parameters('existingVnet'))]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), parameters('tagsByResource')['Microsoft.Network/virtualNetworks'], json('{}')) ]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('vnetCIDR')]"
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2023-04-01",
                            "name": "[format('{0}/{1}', parameters('vnetName'), parameters('controlSubnetName'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                            ],
                            "properties": {
                                "addressPrefix": "[parameters('controlSubnetCidr')]",
                                "privateLinkServiceNetworkPolicies": "Disabled",
                                "serviceEndpoints": [
                                    {
                                        "service": "Microsoft.ContainerRegistry"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2023-04-01",
                            "name": "[format('{0}/{1}', parameters('vnetName'), parameters('workerSubnetName'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('controlSubnetName'))]"
                            ],
                            "properties": {
                                "addressPrefix": "[parameters('workerSubnetCidr')]",
                                "serviceEndpoints": [
                                    {
                                        "service": "Microsoft.ContainerRegistry"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2023-04-01",
                            "name": "[concat(parameters('vnetName'), '/' ,parameters('vmSubnetName'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('workerSubnetName'))]"
                            ],
                            "properties": {
                                "addressPrefix": "[parameters('vmSubnetCIDR')]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                            ],
                            "name": "[concat(parameters('vnetName'), '/Microsoft.Authorization/', guid(resourceGroup().id, deployment().name, parameters('rpObjectId')))]",
                            "properties": {
                                "roleDefinitionId": "[variables('contribRole')]",
                                "principalId": "[parameters('rpObjectId')]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                            ],
                            "name": "[concat(parameters('vnetName'), '/Microsoft.Authorization/', guid(resourceGroup().id, deployment().name, parameters('spObjectId')))]",
                            "properties": {
                                "roleDefinitionId": "[variables('contribRole')]",
                                "principalId":"[parameters('spObjectId')]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(concat(resourceGroup().id, 'contributor'))]",
            "properties": {
                "roleDefinitionId": "[variables('contribRole')]",
                "principalId": "[parameters('spObjectId')]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(concat(resourceGroup().id, 'userAccessAdministrator'))]",
            "properties": {
                "roleDefinitionId": "[variables('userAccessAdminRole')]",
                "principalId": "[parameters('spObjectId')]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.RedHatOpenShift/OpenShiftClusters",
            "apiVersion": "2023-04-01",
            "name": "[parameters('clusterName')]",
            "condition": "[parameters('deployARO')]",
            "location": "[parameters('location')]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.RedHatOpenShift/OpenShiftClusters'), parameters('tagsByResource')['Microsoft.RedHatOpenShift/OpenShiftClusters'], json('{}')) ]",
            "properties": {
                "clusterProfile": {
                    "domain": "[parameters('domain')]",
                    "resourceGroupId": "[variables('aroRG')]",
                    "fipsValidatedModules": "Disabled",
                    "pullSecret": "[parameters('pullSecret')]",
                    "version": "[parameters('aroVersion')]"
                },
                "servicePrincipalProfile": {
                    "clientId": "[parameters('spClientId')]",
                    "clientSecret": "[parameters('spClientSecret')]"
                },
                "networkProfile": {
                    "podCidr": "[parameters('podCIDR')]",
                    "serviceCidr": "[parameters('serviceCIDR')]"
                },
                "masterProfile": {
                    "vmSize": "[parameters('masterSize')]",
                    "subnetId": "[resourceId(parameters('networkResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('controlSubnetName'))]",
                    "encryptionAtHost": "[if(parameters('encryption'), 'Enabled', 'Disabled')]"
                },
                "workerProfiles": [
                    {
                        "name": "worker",
                        "vmSize": "[parameters('workerSize')]",
                        "subnetId": "[resourceId(parameters('networkResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('workerSubnetName'))]",
                        "count": "[parameters('workerCount')]",
                        "diskSizeGB": "[parameters('workerDiskSize')]",
                        "encryptionAtHost": "[if(parameters('encryption'), 'Enabled', 'Disabled')]"
                    }
                ],
                "apiserverProfile": {
                    "visibility": "[parameters('apiVisibility')]"
                },
                "ingressProfiles": [
                    {
                        "name": "default",
                        "visibility": "[parameters('ingressVisibility')]"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId(parameters('networkResourceGroup'),'Microsoft.Resources/deployments', 'virtualNetwork')]",
                "[resourceId('Microsoft.Authorization/roleAssignments', guid(concat(resourceGroup().id, 'contributor')))]",
                "[resourceId('Microsoft.Authorization/roleAssignments', guid(concat(resourceGroup().id, 'userAccessAdministrator')))]"
            ],
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployVM')]",   
            "dependsOn": [
               "[resourceId(parameters('networkResourceGroup'),'Microsoft.Resources/deployments', 'virtualNetwork')]" 
            ],
            "name": "deploymentVM",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "virtualNetworkResourceGroupName": {
                        "value": "[parameters('networkResourceGroup')]" 
                    },
                    "subnetName": {
                        "value": "[parameters('vmSubnetName')]" 
                    },
                    "createPublicIP": {
                        "value": "[parameters('vmCreatePublicIP')]"
                    },
                    "publicIpNewOrExisting": {
                        "value": "[parameters('vmPublicIpNewOrExisting')]"
                    },
                    "publicIpResourceGroup": {
                        "value": "[parameters('vmPublicIpResourceGroup')]" 
                    },
                    "publicIPName": {
                        "value": "[parameters('vmPublicIPName')]" 
                    },
                    "domainName": {
                        "value": "[parameters('vmDomainName')]" 
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vmZone": {
                        "value": "[parameters('vmZone')]"
                    },
                    "vmOSVersion": {
                        "value": "[parameters('vmOSVersion')]"
                    },
                    "vmDiskType": {
                        "value": "[parameters('vmDiskType')]"
                    },
                    "vmOsDiskSize": {
                        "value": "[parameters('vmOsDiskSize')]" 
                    },
                    "vmNsgSecurityRules": {
                        "value": "[parameters('vmNSGSecurityRules')]"
                    },
                    "securityType": {
                        "value": "[parameters('vmSecurityType')]"
                    },
                    "authType": {
                        "value": "[parameters('vmAuthType')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]" 
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                    
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "namePrefix": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "vmName": {
                            "type": "string"
                        },
                        "managedIdName": {
                            "type": "string"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "virtualNetworkResourceGroupName": {
                            "type": "string"
                        },
                        "subnetName": {
                            "type": "string"
                        },
                        "adminUserName": {
                            "type": "string"
                        },
                        "adminPassword": {
                            "type": "secureString"
                        },
                        "authType": {
                            "type": "string"
                        },
                        "securityType": {
                            "type": "string"
                        },
                        "vmNsgSecurityRules": {
                            "type": "array"
                        },
                        "vmSize": {
                            "type": "string"
                        },
                        "vmDiskType": {
                            "type": "string"
                        },
                        "vmOsDiskSize": {
                            "type": "int"
                        },
                        "vmZone": {
                            "type": "string"
                        },
                        "vmOSVersion": {
                            "type": "string"
                        },
                        "createPublicIP": {
                            "type": "bool"
                        },
                        "publicIpNewOrExisting": {
                            "type": "string"
                        },
                        "publicIpResourceGroup": {
                            "type": "string"
                        },
                        "publicIPName": {
                            "type": "string"
                        },
                        "domainName": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "nsgName": "[concat(parameters('namePrefix'), '-nsg')]",
                        "nicName": "[concat(parameters('namePrefix'),'-nic')]",
                        "linuxConfigSSH": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                                        "keyData": "[parameters('adminPassword')]"
                                    }
                                ]
                            }
                        },
                        "linuxConfigPWD": {
                            "disablePasswordAuthentication": false
                        },
                        "imageReference": {
                            "RHEL 8.6": {
                                "publisher": "RedHat",
                                "offer": "RHEL",
                                "sku": "8_6",
                                "version": "latest"
                            },
                            "RHEL 8.7": {
                                "publisher": "RedHat",
                                "offer": "RHEL",
                                "sku": "8_7",
                                "version": "latest"
                            },
                            "RHEL 9.2": {
                                "publisher": "RedHat",
                                "offer": "RHEL",
                                "sku": "9_2",
                                "version": "latest"
                            }
                        },
                        "vmBootstrap": "[concat('#cloud-config\npackage_upgrade: true\npackages:\n- python3.11\n- python3.11-pip\nruncmd:\n- python3.11 -m pip install ansible-core==2.16.3')]",
                        "securityProfile": {
                            "uefiSettings": {
                                "secureBootEnabled": false,
                                "vTpmEnabled": false
                            },
                            "securityType": "[parameters('securityType')]"
                        },
                        "publicIpId": {
                            "new": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
                            },
                            "existing": {
                                "id": "[resourceId(parameters('publicIpResourceGroup'),'Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
                            }
                        },
                        "vnetId": "[resourceId(parameters('virtualNetworkResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
                        "subnetId": "[concat(variables('vnetId'),'/subnets/',parameters('subnetName'))]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                        "roleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')), variables('roleDefinitionId'), resourceGroup().id)]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/publicIPAddresses",
                            "apiVersion": "2022-07-01",
                            "condition": "[and(parameters('createPublicIP'),equals(parameters('publicIpNewOrExisting'),'new'))]",
                            "name": "[parameters('publicIPName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), parameters('tagsByResource')['Microsoft.Network/publicIPAddresses'], json('{}')) ]",
                            "sku": {
                                "name": "Standard",
                                "tier": "Regional"
                            },
                            "zones": [
                                "1",
                                "2",
                                "3"
                            ],
                            "properties": {
                                "publicIPAllocationMethod": "Static",
                                "deleteOption": "Delete",
                                "publicIPAddressVersion": "IPv4",
                                "dnsSettings": {
                                    "domainNameLabel": "[parameters('domainName')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "apiVersion": "2018-11-30",
                            "name": "[parameters('managedIdName')]",
                            "location": "[parameters('location')]"
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[variables('roleDefinitionName')]",
                            "dependsOn": [
                                "[parameters('managedIdName')]"
                            ],
                            "properties": {
                                "roleDefinitionId": "[variables('roleDefinitionId')]",
                                "principalId": "[reference(parameters('managedIdName'), '2018-11-30').principalId]",
                                "scope": "[resourceGroup().id]",
                                "principalType": "ServicePrincipal"
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2022-07-01",
                            "name": "[variables('nsgName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), parameters('tagsByResource')['Microsoft.Network/networkSecurityGroups'], json('{}')) ]",
                            "properties": {
                                "securityRules": "[parameters('vmNsgSecurityRules')]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2022-07-01",
                            "name": "[variables('nicName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkInterfaces'), parameters('tagsByResource')['Microsoft.Network/networkInterfaces'], json('{}')) ]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "subnet": {
                                                "id": "[variables('subnetId')]"
                                            },
                                            "publicIPAddress": "[if(parameters('createPublicIP'),variables('publicIpId')[parameters('publicIpNewOrExisting')],json('null'))]",
                                            "privateIPAllocationMethod": "Dynamic"
                                        }
                                    }
                                ],
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2024-07-01",
                            "name": "[parameters('vmName')]",
                            "location": "[parameters('location')]",
                            "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName'))]": {}
                                }
                            },
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), parameters('tagsByResource')['Microsoft.Compute/virtualMachines'], json('{}')) ]",
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[parameters('vmSize')]"
                                },
                                "storageProfile": {
                                    "osDisk": {
                                        "name": "[concat(parameters('vmName'),'-osdisk')]",
                                        "createOption": "FromImage",
                                        "diskSizeGB": "[parameters('vmOsDiskSize')]",
                                        "caching": "ReadWrite",
                                        "osType": "Linux",
                                        "managedDisk": {
                                            "storageAccountType": "[parameters('vmDiskType')]"
                                        }
                                    },
                                    "imageReference": "[variables('imageReference')[parameters('vmOSVersion')]]"
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                                        }
                                    ]
                                },
                                "osProfile": {
                                    "computerName": "[parameters('vmName')]",
                                    "adminUsername": "[parameters('adminUserName')]",
                                    "adminPassword": "[parameters('adminPassword')]",
                                    "customData": "[base64(variables('vmBootstrap'))]",
                                    "linuxConfiguration": "[if(equals(parameters('authType'), 'sshPublicKey'), variables('linuxConfigSSH'), variables('linuxConfigPWD'))]"
                                },
                                "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'),variables('securityProfile'),json('null'))]",
                                "diagnosticsProfile": {
                                    "bootDiagnostics": {
                                        "enabled": true
                                    }
                                }
                            },
                            "zones": [
                                "[parameters('vmZone')]"
                            ],
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                            ]
                        }
                    ],
                    "outputs": {
                        "vmName": {
                            "type": "string",
                            "value": "[parameters('vmName')]"
                        },
                        "internalIP": {
                            "type": "string",
                            "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('nicName')), '2022-07-01').ipConfigurations[0].properties.privateIPAddress]"
                        },
                        "publicIP": {
                            "condition": "[parameters('createPublicIP')]",
                            "type": "string",
                            "value": "[reference(resourceId(parameters('publicIpResourceGroup'),'Microsoft.Network/publicIPAddresses', parameters('publicIPName')), '2022-07-01').ipAddress]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('installCpdCli')]", 
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deploymentVM')]"
            ],
            "name": "configureVM",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/install-cpd-cli/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "cpdCliVersion": {
                        "value": "[parameters('cpdCliVersion')]" 
                    },
                    "cpdEdition": {
                        "value": "[parameters('cpdEdition')]"  
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]" 
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('configureOpenShift')]", 
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'configureVM')]",
                "[resourceId('Microsoft.RedHatOpenShift/OpenShiftClusters', parameters('clusterName'))]"
            ],
            "name": "configureOpenShift",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/configure-openshift/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "openShiftApiUrl": {
                        "value": "[reference(parameters('clusterName')).apiserverProfile.url]" 
                    },
                    "openShiftUsername": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminUsername]"   
                    },
                    "openShiftAuthType": {
                        "value": "Password"
                    },
                    "openShiftPassword": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminPassword]"  
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]" 
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployODF')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'configureOpenShift')]"
            ],
            "name": "deployODF",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/deploy-odf/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "openShiftApiUrl": {
                        "value": "[reference(parameters('clusterName')).apiserverProfile.url]" 
                    },
                    "openShiftUsername": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminUsername]"   
                    },
                    "openShiftAuthType": {
                        "value": "Password"
                    },
                    "openShiftPassword": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminPassword]"  
                    },
                    "clusterSize": {
                        "value": "[parameters('odfClusterSize')]"  
                    },
                    "existingNodes": {
                        "value": "[parameters('odfExistingNodes')]"  
                    },
                    "licenseAccepted": {
                        "value": "[parameters('acceptLicense')]" 
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]" 
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('createGPUMachineset')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployODF')]"
            ],
            "name": "createGpuMachineset",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/create-gpu-machinesets/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "openShiftApiUrl": {
                        "value": "[reference(parameters('clusterName')).apiserverProfile.url]" 
                    },
                    "openShiftUsername": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminUsername]"   
                    },
                    "openShiftAuthType": {
                        "value": "Password"
                    },
                    "openShiftPassword": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminPassword]"  
                    },
                    "nodeType": {
                        "value": "[parameters('gpuNodeType')]" 
                    },
                    "nodeQty": {
                        "value": "[parameters('gpuNodeQty')]"  
                    },
                    "nodeStorageType": {
                        "value": "[parameters('gpuNodeStorageType')]" 
                    },
                    "nodeDiskSize": {
                        "value": "[parameters('gpuNodeDiskSize')]" 
                    },
                    "nodeName": {
                        "value": "[parameters('gpuNodeName')]" 
                    },
                    "taintNodes": {
                        "value": "[parameters('gpuTaintNodes')]"  
                    },
                    "nodeZone": {
                        "value": "[parameters('gpuNodeZone')]" 
                    },
                    "binDirectory": {
                        "value": "/usr/local/bin"
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployNFD')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'createGpuMachineset')]"
            ],
            "name": "deployNFDTool",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/deploy-rh-node-discovery-tool/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "openShiftApiUrl": {
                        "value": "[reference(parameters('clusterName')).apiserverProfile.url]" 
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "openShiftUsername": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminUsername]"   
                    },
                    "openShiftAuthType": {
                        "value": "Password"
                    },
                    "openShiftPassword": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminPassword]"  
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]" 
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployNvidiaDriver')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployNFDTool')]"
            ],
            "name": "deployNvidiaDriver",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/deploy-nvidia-driver/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "openShiftApiUrl": {
                        "value": "[reference(parameters('clusterName')).apiserverProfile.url]" 
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "openShiftUsername": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminUsername]"   
                    },
                    "openShiftAuthType": {
                        "value": "Password"
                    },
                    "openShiftPassword": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminPassword]"  
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]" 
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployRHOpenShiftAI')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployNvidiaDriver')]"
            ],
            "name": "deployRedHatOpenShiftAI",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/deploy-rh-openshift-ai/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "openShiftApiUrl": {
                        "value": "[reference(parameters('clusterName')).apiserverProfile.url]" 
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "openShiftUsername": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminUsername]"   
                    },
                    "openShiftAuthType": {
                        "value": "Password"
                    },
                    "openShiftPassword": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminPassword]"  
                    },
                    "operatorChannel": {
                        "value": "[parameters('rhOpenShiftAiChannel')]"
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]" 
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployCpdBase')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployRedHatOpenShiftAI')]"
            ],
            "name": "deployCpdBase",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/deploy-cp4d-base/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "openShiftApiUrl": {
                        "value": "[reference(parameters('clusterName')).apiserverProfile.url]" 
                    },
                    "openShiftUsername": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminUsername]"   
                    },
                    "openShiftAuthType": {
                        "value": "Password"
                    },
                    "openShiftPassword": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminPassword]"  
                    },
                    "cpdVersion": {
                        "value": "[parameters('cpdVersion')]"
                    },
                    "cpdOperatorNamespace": {
                        "value": "[parameters('cpdOperatorNamespace')]"
                    },
                    "cpdOperandsNamespace": {
                        "value": "[parameters('cpdOperandsNamespace')]"
                    },
                    "certManagerNamespace": {
                        "value": "[parameters('certManagerNamespace')]"
                    },
                    "schedulingServiceNamespace": {
                        "value": "[parameters('schedulingServiceNamespace')]"
                    },
                    "licensingServiceNamespace": {
                        "value": "[parameters('licensingServiceNamespace')]"
                    },
                    "ibmEntitlementKey": {
                        "value": "[parameters('ibmEntitlementKey')]"
                    },
                    "blockStorageClass": {
                        "value": "[parameters('blockStorageClass')]"
                    },
                    "fileStorageClass": {
                        "value": "[parameters('fileStorageClass')]"
                    },
                    "binDirectory": {
                        "value": "/usr/local/bin"
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployWatsonxBase')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployCpdBase')]"
            ],
            "name": "deployWatsonxAiBase",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/deploy-watsonx-ai/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "openShiftApiUrl": {
                        "value": "[reference(parameters('clusterName')).apiserverProfile.url]" 
                    },
                    "openShiftUsername": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminUsername]"   
                    },
                    "openShiftAuthType": {
                        "value": "Password"
                    },
                    "openShiftPassword": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminPassword]"  
                    },
                    "cpdVersion": {
                        "value": "[parameters('cpdVersion')]"
                    },
                    "cpdOperatorNamespace": {
                        "value": "[parameters('cpdOperatorNamespace')]"
                    },
                    "cpdOperandsNamespace": {
                        "value": "[parameters('cpdOperandsNamespace')]"
                    },
                    "tuningEnabled": {
                        "value": "[parameters('tuningEnabled')]"  
                    },
                    "liteVersion": {
                        "value": "[parameters('liteVersion')]"  
                    },
                    "blockStorageClass": {
                        "value": "[parameters('blockStorageClass')]"
                    },
                    "fileStorageClass": {
                        "value": "[parameters('fileStorageClass')]"
                    },
                    "binDirectory": {
                        "value": "/usr/local/bin"
                    },
                    "cpdWorkspace": {
                        "value": "[parameters('cpdWorkspace')]" 
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployLLM')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployWatsonxAiBase')]"
            ],
            "name": "deployLLM",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), variables('gitRepoBaseDirectory'),parameters('deploymentVersion'),'/deploy-watsonx-ai/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "extensionName": {
                        "value": "[parameters('vmExtensionName')]"
                    },
                    "openShiftApiUrl": {
                        "value": "[reference(parameters('clusterName')).apiserverProfile.url]" 
                    },
                    "openShiftUsername": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminUsername]"   
                    },
                    "openShiftAuthType": {
                        "value": "Password"
                    },
                    "openShiftPassword": {
                        "value": "[listCredentials(parameters('clusterName'),'2022-04-01').kubeadminPassword]"  
                    },
                    "cpdNamespace": {
                        "value": "[parameters('cpdOperandsNamespace')]"
                    },
                    "llmList": {
                        "value": "[parameters('llmList')]" 
                    },
                    "gitRepositoryUrl": {
                        "value": "[variables('gitRepositoryUrl')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}