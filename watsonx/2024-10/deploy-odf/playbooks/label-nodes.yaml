---

- name: Log information about labelling existing worker nodes for use with ODF storage cluster
  ansible.builtin.debug:
    msg: "INFO: Labelling existing worker nodes for use with ODF storage cluster"

- name: Get list of worker nodes
  ansible.builtin.shell: |
    {{ directories.bin_dir }}/oc get nodes -o jsonpath='{.items[?(@.status.phase=="Ready")].metadata.name}' | grep worker
  register: worker_nodes

- name: Check if there are at least 3 worker nodes available
  ansible.builtin.fail:
    msg: "ERROR: Insufficient nodes for storage cluster. Must have at least 3 nodes available"
  when: worker_nodes.stdout_lines | length < 3

- name: Get details of each worker node
  ansible.builtin.set_fact:
    node_details: "{{ node_details | default([]) + [ { 'name': item, 'cpu': cpu, 'zone': zone, 'labelled': labelled } ] }}"
  loop: "{{ worker_nodes.stdout_lines }}"
  vars:
    cpu: "{{ lookup('pipe', directories.bin_dir ~ '/oc get node ' ~ item ~ ' -o json | jq -r \\'.status.capacity.cpu\\'') }}"
    zone: "{{ lookup('pipe', directories.bin_dir ~ '/oc get machine -n openshift-machine-api | grep ' ~ item ~ ' | awk \\'{print $5}\\') }}"
    labelled: "{{ lookup('pipe', directories.bin_dir ~ '/oc get node ' ~ item ~ ' -o json | jq \\'.metadata.labels | has(\"cluster.ocs.openshift.io\")\\')' == 'true' }}"

- name: Check number of nodes with sufficient size (16 CPU or higher)
  ansible.builtin.fail:
    msg: "ERROR: Insufficient nodes of sufficient size available for storage cluster. Minimum of 3 nodes with 16 CPU or more required."
  when: node_details | selectattr('cpu', '>=', 16) | list | length < 3

- name: Label existing nodes for availability zones
  vars:
    zones:
      - zone: "1"
      - zone: "2"
      - zone: "3"
  block:
    - name: Get existing labelled nodes in zone
      set_fact:
        labelled_nodes: "{{ node_details | selectattr('zone', 'equalto', zone_info.zone) | selectattr('labelled', 'equalto', true) | map(attribute='name') | list }}"
      loop: "{{ zones }}"
      loop_control:
        loop_var: zone_info

    - name: Label a new node for ODF in zone
      when: labelled_nodes | length == 0
      block:
        - name: Get unlabelled node from zone
          ansible.builtin.set_fact:
            odf_nodes: "{{ node_details | selectattr('zone', 'equalto', zone_info.zone) | selectattr('labelled', 'equalto', false) | map(attribute='name') | list }}"
          loop: "{{ zones }}"
          loop_control:
            loop_var: zone_info

        - name: Label a new node and log the action
          when: odf_nodes | length > 0
          block:
            - ansible.builtin.command: "{{ directories.bin_dir }}/oc label node {{ odf_nodes[0] }} cluster.ocs.openshift.io/openshift-storage=''"
            - ansible.builtin.debug:
                msg: "INFO: Labelling {{ odf_nodes[0] }} as ODF node for availability zone {{ zone_info.zone }}"
          loop: "{{ zones }}"
          loop_control:
            loop_var: zone_info