{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix for resource names"
            }
        },
        "clusterName": {
            "type": "string",
            "defaultValue": "[tolower(concat(substring(parameters('namePrefix'),1,5), '-', substring(uniqueString(resourceGroup().id),1,5)))]",
            "metadata": {
                "description": "Optional name of the cluster. If not provided, will be a random name. Must be in lowercase and less than 8 characters."
            }
        },
        "rgRoleGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "forceUpdateTag property, used to force the execution of the script resource when no other properties have changed."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for deployment container"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'), 'script',substring(uniqueString(resourceGroup().id),1,7))]",
            "metadata": {
                "description": "Name for the storage account for the script execution"
            }            
        },
        "managedIdName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-script-sp')]",
            "metadata": {
                "description": "Name of the managed identity used for deployment scripts"
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "The resource group containing the virtual network (if using a private vnet)"
            }
        },
        "clientId": {
            "type": "string",
            "metadata": {
                "description": "Service principal id"
            }
        },
        "clientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Service principal secret"
            }
        },
        "clientObjectId": {
            "type": "string",
            "metadata": {
                "description": "Object id for the service principal. Use \"az ad sp list --display-name <service_principal_name> --query '[0].id' -o tsv\""
            }
        },
        "baseDomain": {
            "type": "string",
            "metadata": {
                "description": "Base domain suffix for OpenShift cluster."
            }
        },
        "ocpVersion": {
            "type": "string",
            "defaultValue": "4.12",
            "metadata": {
                "description": "Openshift version to install"
            }
        },
        "masterNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D8s_v3",
            "metadata": {
                "description": "VM size for the master nodes"
            }
        },
        "workerNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D16s_v3",
            "metadata": {
                "description": "VM size for the worker nodes"
            }
        },
        "workerNodeQty": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of worker nodes to deploy"
            }
        },
        "baseDomainRG": {
            "type": "string",
            "metadata": {
                "description": "Resource group that contains the DNS zone for the base domain"
            }
        },
        "pullSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Red Hat OpenShift Pull Secret"
            }
        },
        "publicSshKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Public SSH Key for the OpenShift nodes"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "The name of the new or existing VNet (if using a private vnet)"
            }
        },
        "vnetCIDR": {
            "type": "string"
        },
        "controlSubnetName": {
            "type": "string"
        },
        "workerSubnetName": {
            "type": "string"
        },
        "deployOnVnet": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy with a private VNet connection."
            }
        },
        "createSubnet": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create the script subnet"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "script-subnet",
            "metadata": {
                "description": "Name of the subnet the script will attach to (if using a private vnet)"
            }
        },
        "subnetCidr": {
            "type": "string",
            "defaultValue": "10.0.1.0/27",
            "metadata": {
                "description": "Address prefix for the script subnet (if using a private vnet)"
            }
        },
        "hostEncryption": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether hosts should have host-level encryption enabled, \"Encryption At Host\" (requires activation for Azure subscription)"
            }
        },
        "clusterResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The name of the empty resource group into which the cluster resources will be built."
            }
        },
        "existingClusterResourceGroup": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether to create a new cluster resource group or use existing"
            }
        },
        "useVault": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether to upload password to keyvault or return value"
            }
        },
        "vaultName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the key vault to store credentials"
            }
        },
        "clusterPasswordSecretName": {
            "type": "string",
            "defaultValue" :"",
            "metadata": {
                "description": "The keyvault secret in which to store the cluster password"
            }
        },
        "logLevel": {
            "type": "string",
            "allowedValues": [
                "Default",
                "Debug"
            ],
            "defaultValue": "Default",
            "metadata": {
                "description": "Flag to determine level of logging and post deployment clean up"
            }
        },
        "publish": {
            "type": "string",
            "allowedValues": [
                "Internal",
                "External"
            ]
        },
        "baseUrl": {
            "type": "string"
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for resources"
            }
        }
    },
    "variables": {
        "azureCliVersion": "2.45.0",
        "scriptName": "[ concat(parameters('namePrefix'), '-ocp-deploy-script') ]",
        "containergroupName": "[ concat( parameters('namePrefix'), '-ocp-deploy-cg') ]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "roleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('clientObjectId')), variables('roleDefinitionId'), resourceGroup().id)]",
        "subnetIds": [
        {
            "id": "[resourceId(parameters('networkResourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnetName'))]"
        }
      ]
    },
    "resources": [
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('roleDefinitionName')]",
            "properties": {
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "principalId": "[parameters('clientObjectId')]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "scriptSubnet",
            "resourceGroup": "[parameters('networkResourceGroup')]",
            "condition": "[and(parameters('deployOnVnet'),parameters('createSubnet'))]",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetName')]"
                    },
                    "subnetCidr": {
                        "value": "[parameters('subnetCidr')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vnetName": {
                            "type": "string"
                        },
                        "subnetName": {
                            "type": "string"
                        },
                        "subnetCidr": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2023-04-01",
                            "name": "[format('{0}/{1}', parameters('vnetName'), parameters('subnetName'))]",
                            "properties": {
                                "addressPrefix": "[parameters('subnetCidr')]",
                                "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Storage"
                                }
                                ],
                                "delegations": [
                                    {
                                        "name": "Microsoft.ContainerInstance.containerGroups",
                                        "properties": {
                                            "serviceName": "Microsoft.ContainerInstance/containerGroups"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "comments": "Deploys OpenShift IPI cluster on an existing Azure VNet",
            "name": "[ variables('scriptName') ]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), parameters('tagsByResource')['Microsoft.Resources/deploymentScripts'], json('{}')) ]",
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleDefinitionName'))]",
                "[resourceId(parameters('networkResourceGroup'),'Microsoft.Resources/deployments', 'scriptSubnet')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "location": "[parameters('location')]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName'))]": {}
                }
            },
            "kind": "AzureCLI",
            "properties": {
                "forceUpdateTag": "[parameters('rgRoleGuid')]",
                "containerSettings": {
                    "containerGroupName": "[variables('containerGroupName')]",
                    "subnetIds": "[if(parameters('deployOnVnet'),variables('subnetIds'),json('null'))]"
                },
                "storageAccountSettings": {
                    "storageAccountName": "[parameters('storageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value]"
                },
                "azCliVersion": "[variables('azureCliVersion')]",  
                "environmentVariables": [
                    {
                        "name": "CLUSTER_NAME",
                        "value": "[parameters('clusterName')]"
                    },
                    {
                        "name": "LOCATION",
                        "value": "[parameters('location')]"
                    },
                    {
                        "name": "CLIENT_ID",
                        "value": "[parameters('clientId')]"
                    },
                    {
                        "name": "CLIENT_SECRET",
                        "secureValue": "[parameters('clientSecret')]"
                    },
                    {
                        "name": "BASE_DOMAIN",
                        "value": "[parameters('baseDomain')]"
                    },
                    {
                        "name": "BASE_DOMAIN_RESOURCE_GROUP",
                        "value": "[parameters('baseDomainRG')]"
                    },
                    {
                        "name": "PULL_SECRET",
                        "secureValue": "[parameters('pullSecret')]"
                    },
                    {
                        "name": "PUBLIC_SSH_KEY",
                        "secureValue": "[parameters('publicSshKey')]"
                    },
                    {
                        "name": "MASTER_NODE_TYPE",
                        "value": "[parameters('masterNodeSize')]"
                    },
                    {
                        "name": "WORKER_NODE_TYPE",
                        "value": "[parameters('workerNodeSize')]"
                    },
                    {
                        "name": "WORKER_NODE_QTY",
                        "value": "[parameters('workerNodeQty')]"
                    },
                    {
                        "name": "VNET_NAME",
                        "value": "[parameters('vnetName')]"
                    },
                    {
                        "name": "MACHINE_CIDR",
                        "value": "[parameters('vnetCIDR')]"
                    },
                    {
                        "name": "WORKER_SUBNET_NAME",
                        "value": "[parameters('workerSubnetName')]"
                    },
                    {
                        "name": "CONTROL_SUBNET_NAME",
                        "value": "[parameters('controlSubnetName')]"
                    },
                    {
                        "name": "HOST_ENCRYPTION",
                        "value": "[if(parameters('hostEncryption'),'true','false')]"
                    },
                    {
                        "name": "CLUSTER_RESOURCE_GROUP",
                        "value": "[parameters('clusterResourceGroup')]"
                    },
                    {
                        "name": "NEW_CLUSTER_RESOURCE_GROUP",
                        "value": "[if(parameters('existingClusterResourceGroup'),'false','true')]"
                    },
                    {
                        "name": "VAULT_NAME",
                        "value": "[if(parameters('useVault'),parameters('vaultName'),null())]"
                    },
                    {
                        "name": "SECRET_NAME",
                        "value": "[parameters('clusterPasswordSecretName')]"
                    },
                    {
                        "name": "NETWORK_RESOURCE_GROUP",
                        "value": "[parameters('networkResourceGroup')]"
                    },
                    {
                        "name": "CLUSTER_ACCESS",
                        "value": "[parameters('publish')]"
                    },
                    {
                        "name": "BIN_DIR",
                        "value": "/usr/bin"
                    },
                    {
                        "name": "VERSION",
                        "value": "[parameters('ocpVersion')]"
                    },
                    {
                        "name": "DEBUG",
                        "value": "[if(equals(parameters('logLevel'),'Debug'),'true','false')]"
                    }
                ],
                    "primaryScriptUri": "[uri(parameters('baseUrl'),'scripts/deploy-ocp.sh')]",
                    "supportingScriptUris": [
                        "[uri(parameters('baseUrl'),'scripts/common.sh')]"
                ],
                "timeout": "PT120M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        }            
    ],
    "outputs": {
        "consoleURL": {
            "type": "string",
            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.consoleURL ]"
        },
        "apiServer": {
            "type": "string",
            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.apiServer ]"
        },
        "adminUser": {
            "type": "string",
            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.adminUser ]"
        },
        "clusterName": {
            "type": "string",
            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.clusterName ]"
        },
        "clusterId": {
            "type": "string",
            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.clusterId ]"
        },
        "infraId": {
            "type": "string",
            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.infraId ]"
        }
    }
}