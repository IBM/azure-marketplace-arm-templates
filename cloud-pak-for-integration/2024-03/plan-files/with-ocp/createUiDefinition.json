{
    "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
    "handler": "Microsoft.Azure.CreateUIDef",
    "version": "0.1.2-preview",
    "parameters": {
		"config": {
			"isWizard": false,
			"basics": {
				"resourceGroup": {
					"constraints": {
						"validations": [
							{
								"permission": "Microsoft.ManagedIdentity/userAssignedIdentities/create",
								"message": "Must be able to create a user assigned identity in the resource group"
							}
						]
					},
					"allowExisting": true
				},
				"location": {
					"visible": true,
					"resourceTypes": [
						"Microsoft.Resources/deploymentScripts",
						"Microsoft.ManagedIdentity/userAssignedIdentities",
						"Microsoft.Storage/storageAccounts"
					],
					"allowedValues": [
						"eastus",
						"eastus2",
						"southcentralus",
						"westus2",
						"westus3",
						"australiaeast",
						"southeastasia",
						"northeurope",
						"swedencentral",
						"uksouth",
						"westeurope",
						"centralus",
						"southafricanorth",
						"centralindia",
						"eastasia",
						"japaneast",
						"koreacentral",
						"canadacentral",
						"francecentral",
						"germanywestcentral",
						"italynorth",
						"norwayeast",
						"polandcentral",
						"switzerlandnorth",
						"uaenorth",
						"brazilsouth",
						"centraluseuap",
						"israelcentral",
						"qatarcentral",
						"northcentralus",
						"westus",
						"eastus2euap"
					]
				}
			}
		},
        "basics": [
            {
                "name": "namePrefix",
                "type": "Microsoft.Common.TextBox",
                "label": "Azure resource prefix",
                "defaultValue": "ibmint",
                "toolTip": "Prefix for Azure installation resources.",
				"constraints":{
					"required": true,
					"validations": [
						{
							"regex": "^[a-zA-Z]+[a-z0-9A-Z]{2,10}$",
							"message": "Only alphanumeric characters are allowed, the first character must be a letter and must be between 3 and 10 characters in length."
						}
					]
				}
            }
        ],
        "steps": [
			{
				"name": "networking",
				"label": "Network Settings",
				"elements": [
					{
						"name": "vnet",
						"type": "Microsoft.Network.VirtualNetworkCombo",
						"label": {
							"virtualNetwork": "Virtual Network",
							"subnets": "OpenShift Subnets"
						},
						"toolTip": {
							"virtualNetwork": "Selecting an existing VNet or enter the name of a new one",
							"subnets": "The name and CIDR for the subnet. Existing subnets must not have any NSGs or delegations."
						},
						"defaultValue": {
							"name": "[concat(basics('namePrefix'),'-vnet')]",
							"addressPrefixSize": "/20"
						},
						"constraints": {
							"minAddressPrefixSize": "/22"
						},
						"options": {
							"hideExisting": false
						},
						"subnets": {
							"controlSubnet": {
								"label": "Control Subnet",
								"defaultValue": {
									"name": "control-subnet",
									"addressPrefixSize": "/24"
								},
								"constraints": {
									"minAddressPrefixSize": "/26",
									"minAddressCount": 3,
									"requireContiguousAddresses": true
								}
							},
							"workerSubnet": {
								"label": "Worker Subnet",
								"defaultValue": {
									"name": "worker-subnet",
									"addressPrefixSize": "/24"
								},
								"constraints": {
									"minAddressPrefixSize": "/24",
									"minAddressCount": 50,
									"requireContiguousAddresses": true
								}
							},
							"endpointSubnet": {
								"label": "Endpoint Subnet",
								"defaultValue": {
									"name": "endpoint-subnet",
									"addressPrefixSize": "/24"
								},
								"constraints": {
									"minAddressPrefixSize": "/24",
									"minAddressCount": 50,
									"requireContiguousAddresses": true
								}
							}
						},
						"visible": true
					}
				]
			},
            {
				"name": "openshift",
				"label": "OpenShift Cluster",
				"elements": [
					{
						"name": "ocpVersion",
						"type": "Microsoft.Common.DropDown",
						"label": "OpenShift version",
						"toolTip": "Select the version of Red Hat OpenShift to install",
						"defaultValue": "4.12",
						"constraints": {
							"allowedValues": [
								{
									"label": "4.12",
									"value": "4.12"
								}
							]
						}
					},
					{
						"name": "domainName",
						"type": "Microsoft.Solutions.ResourceSelector",
						"label": "DNS Zone for Cluster",
						"toolTip": "DNS Zone with base domain name for the cluster",
						"resourceType": "Microsoft.Network/dnsZones",
						"constraints": {
							"required": true
						},
						"options": {
							"filter": {
								"subscription": "onBasics"
							}
						}
					},
					{
						"name": "newClusterResourceGroup",
						"type": "Microsoft.Common.OptionsGroup",
						"label": "New or existing cluster resource group",
						"toolTip": "This group will hold all the OpenShift cluster Azure resources",
						"visible": true,
						"defaultValue": "New",
						"constraints": {
							"allowedValues": [
								{
									"label": "New",
									"value": "new"
								},
								{
									"label": "Existing",
									"value": "existing"
								}
							],
							"required": true
						}
					},
					{
						"name": "resourceGroups",
						"type": "Microsoft.Solutions.ArmApiControl",
						"request": {
							"method": "GET",
							"path": "[concat(subscription().id, '/resourceGroups?api-version=2022-09-01')]"
						}
					},
					{
						"name": "newClusterResourceGroupName",
						"type": "Microsoft.Common.TextBox",
						"label": "Resource Group Name",
						"toolTip": "This group will hold all the OpenShift cluster Azure resources",
						"visible": "[equals(steps('openshift').newClusterResourceGroup, 'new')]",
						"defaultValue": "[concat(basics('namePrefix'),'-openshift-rg')]",
						"constraints": {
							"validations": [
								{
									"regex": "^[a-zA-Z0-9.()_-]{1,90}$",
									"message": "Must be 1 to 90 characters and contain only letters, numbers, periods, paranthesis, underscores or hypens."
								},
								{
									"isValid": "[not(endsWith(steps('openshift').newClusterResourceGroupName,'.'))]",
									"message": "Must not end with a period"
								},
								{
									"isValid": "[if(equals(steps('openshift').newClusterResourceGroupName, ''),true,empty(filter( steps('openshift').resourceGroups.value, (item) => contains(item.name, steps('openshift').newClusterResourceGroupName ))))]",
									"message": "Resource group already exists"
								}
							]
						}
					},
                    {
						"name": "existingClusterResourceGroupName",
						"type": "Microsoft.Common.DropDown",
						"label": "Select Resource Group",
						"toolTip": "Select the resource group to use. Must be empty.",
						"constraints": {
							"allowedValues": "[map(filter( steps('openshift').resourceGroups.value, (item) => contains(item.location, location())), (item) => parse(concat('{\"label\":\"',item.name,'\",\"value\":\"', item.name, '\"}')))]",
							"required": true
						},
						"visible": "[equals(steps('openshift').newClusterResourceGroup, 'existing')]"
					},
					{
						"name": "masterNodes",
						"type": "Microsoft.Compute.SizeSelector",
						"label": "Control VM Size",
						"toolTip": "The size of the control nodes",
						"recommendedSizes": [
							"Standard_D8s_v3",
							"Standard_D16s_v3",
							"Standard_D32s_v3"
						],
						"constraints": {
							"allowedSizes": [
								"Standard_D8s_v3",
								"Standard_D16s_v3",
								"Standard_D32s_v3",
								"Standard_E64i_v3",
								"Standard_E64is_v3",
								"Standard_E80is_v4",
								"Standard_E80ids_v4",
								"Standard_E104i_v5",
								"Standard_E104is_v5",
								"Standard_E104id_v5",
								"Standard_E104ids_v5",
								"Standard_F72s_v2",
								"Standard_G5",
								"Standard_GS5",
								"Standard_M128ms"
							]
						},
						"options": {
							"hideDiskTypeFilter": false
						},
						"osPlatform": "Linux",
						"imageReference": {
							"publisher": "MicrosoftWindowsServer",
							"offer": "WindowsServer",
							"sku": "2012-R2-Datacenter"
						},
						"count": 3,
						"visible": true
					},
					{
						"name": "workerNodes",
						"type": "Microsoft.Compute.SizeSelector",
						"label": "Worker VM Size",
						"toolTip": "The size of the worker nodes",
						"defaultValue": "Standard_D16s_v3",
						"recommendedSizes": [
							"Standard_D16s_v3",
							"Standard_D32s_v3"
						],
						"constraints": {
							"allowedSizes": [
								"Standard_D16s_v3",
								"Standard_D32s_v3",
								"Standard_D16as_v4",
								"Standard_D32as_v4",
								"Standard_E16s_v3",
								"Standard_E32s_v3",
								"Standard_E64is_v3",
								"Standard_E80is_v4",
								"Standard_E80ids_v4",
								"Standard_E104is_v5",
								"Standard_E104id_v5",
								"Standard_E104ids_v5",
								"Standard_F16s_v2",
								"Standard_F32s_v2",
								"Standard_F72s_v2",
								"Standard_M128ms",
								"Standard_L16s",
								"Standard_L32s",
								"Standard_L16s_v2",
								"Standard_L32s_v2",
								"Standard_L48s_v2",
								"Standard_L48s_v2",
								"Standard_NC16as_T4_v3",
								"Standard_NC24s_v3",
								"Standard_NC24rs_v3",
								"Standard_NC64as_T4_v3",
								"Standard_GS5"
							]
						},
						"options": {
							"hideDiskTypeFilter": false
						},
						"osPlatform": "Linux",
						"count": "[steps('openshift').workerCount]",
						"visible": true
					},
					{
							"name": "workerCount",
							"type": "Microsoft.Common.Slider",
							"min": 3,
							"max": 64,
							"label": "Worker Node Quantity",
							"defaultValue": 3,
							"showStepMarkers": false,
							"toolTip": "The number of worker nodes",
							"constraints": {
								"required": false
							},
							"visible": true
					},
					{
						"name": "encryption",
						"type": "Microsoft.Common.CheckBox",
						"label": "Enable encryption at host",
						"toolTip": "Encryption at host must be enabled for the subscription"
					},
					{
						"name": "servicePrincipal",
						"type": "Microsoft.Common.ServicePrincipalSelector",
						"label": {
						  "password": "Password",
						  "certificateThumbprint": "Certificate thumbprint",
						  "authenticationType": "Authentication Type",
						  "sectionHeader": "Service Principal"
						},
						"toolTip": {
						  "password": "Password",
						  "certificateThumbprint": "Certificate thumbprint",
						  "authenticationType": "Authentication Type"
						},
						"defaultValue": {
						  "principalId": "<default guid>",
						  "name": "(New) default App Id"
						},
						"constraints": {
						  "required": true,
						  "regex": "^[a-zA-Z0-9~._-]{8,}$",
						  "validationMessage": "Password must be at least 8 characters long, contain only numbers and letters"
						},
						"options": {
						  "hideCertificate": false
						},
						"visible": true
					},
					{
						"name": "pullSecret",
						"type": "Microsoft.Common.TextBox",
						"label": "Red Hat Pull Secret",
						"toolTip": "Refer to https://console.redhat.com/openshift/install/pull-secret",
						"multiLine": true,
						"constraints": {
						  "required": true,
						  "validations": [
							{
								"regex": "{.*:{.*:.*}}",
								"message": "Pull secret must be valid"
							},
							{
								"isValid": "[startsWith( steps('openshift').pullSecret, '{\"auths\":' )]",
								"message": "Pull secret must start with \"auths\""
							}
						  ]
						},
						"visible": true
					}
				]
			},
			{
                "name": "cp4i",
                "label": "Cloud Pak for Integration",
                "elements": [
                    {
						"name": "ibmEntitlementKey",
						"type": "Microsoft.Common.PasswordBox",	
						"toolTip": "Entitlement key for the IBM Entitled Registry, used to pull the software images",					
						"label": {
							"password": "Entitlement key",
                            "confirmPassword": "Confirm Entitlement key"
						},
						"constraints": {
							"required": true,
							"regex": "^[a-zA-Z0-9._-]{100,}$",
							"validationMessage": "Key must be at least 100 characters long, contain only numbers, letters, underscores, dots and dashes"
                		},
						"options": {
							"hideConfirmation": false
						},
						"visible": true
					},
					{
						"name": "licenseInfo",
						"type": "Microsoft.Common.InfoBox",
						"visible": true,
						"options": {
						  "icon": "None",
						  "text": "By accepting the license agreement you are accepting the terms and conditions of the license.  For more information about licenses, click this box.",
						  "uri": "https://ibm.biz/int-licenses"
						}
					},
					{
						"name": "cp4iEdition",
						"type": "Microsoft.Common.DropDown",
						"label": "Cloud Pak for Integration version",
						"toolTip": "The version and license to be used for the installation. Refer to the information box for details.",
						"constraints": {
						  "allowedValues": [
							{
							  	"label": "IBM Cloud Pak for Integration 2022.2.1 (L-RJON-CD3JKX)",
							  	"value": "[parse('{\"version\":\"2022.2.1\",\"license\":\"L-RJON-CD3JKX\"}')]"
							},
							{
								"label": "IBM Cloud Pak for Integration Reserved 2022.2.1 (L-RJON-CJR2WN)",
								"value": "[parse('{\"version\":\"2022.2.1\",\"license\":\"L-RJON-CJR2WN\"}')]"
							}
						  ],
						  "required": true
						},
						"visible": true
					},
					{
						"name": "acceptLicense",
						"type": "Microsoft.Common.OptionsGroup",
						"label": "License agreement",
						"toolTip": "Acceptance of license terms is required to continue with installation.  Refer to the information box for details.",
						"defaultValue": "Decline",
						"constraints": {
							"required": true,
							"allowedValues": [
								{
									"label": "Decline",
									"value": "decline"
								},
								{
									"label": "Accept",
									"value": "accept"
								}
							]
						},
						"visible": true
					},
					{
						"name": "nameSpace",
						"type": "Microsoft.Common.TextBox",
						"label": "Platform UI namespace",
						"defaultValue": "cp4i",
						"toolTip": "Namespace where you want to install the Platform UI.",
						"multiLine": false,
						"constraints": {
						  "required": true,
						  "validations": [
							{
							  "regex": "^[a-z0-9A-Z-]{3,63}$",
							  "message": "Only alphanumeric characters and dashes are allowed, and the value must be more than 3 and less than 63 characters long."
							}
						  ]
						},
						"visible": true
					}
                ]
            },
            {
                "name": "tags",
                "label": "Tags",
                "elements": [
                    {
                        "name": "tagsByResource",
                        "type": "Microsoft.Common.TagsByResource",
                        "toolTip": "Create one or more tags to associate with the created resources.",
                        "resources": [
                            "Microsoft.Network/networkSecurityGroups",
                            "Microsoft.Network/virtualNetworks",
                            "Microsoft.KeyVault/vaults",
							"Microsoft.ManagedIdentity/userAssignedIdentities",
							"Microsoft.Storage/storageAccounts",
							"Microsoft.Resources/deploymentScripts",
							"Microsoft.Compute/sshPublicKeys"
                        ]
                    }
                ]
            }
         ],
        "outputs": {
            "namePrefix": "[basics('namePrefix')]",
			"vnetName": "[steps('networking').vnet.name]",
			"existingVnet": "[if(equals(steps('networking').vnet.newOrExisting,'new'),false,true)]",
			"networkResourceGroup": "[steps('networking').vnet.resourceGroup]",
			"vnetCIDR": "[first( steps('networking').vnet.addressPrefixes ) ]",
			"controlSubnetCIDR": "[steps('networking').vnet.subnets.controlSubnet.addressPrefix]",
			"controlSubnetName": "[steps('networking').vnet.subnets.controlSubnet.name]",
			"workerSubnetCIDR": "[steps('networking').vnet.subnets.workerSubnet.addressPrefix]",
			"workerSubnetName": "[steps('networking').vnet.subnets.workerSubnet.name]",
			"endpointSubnetCIDR": "[steps('networking').vnet.subnets.endpointSubnet.addressPrefix]",
			"endpointSubnetName": "[steps('networking').vnet.subnets.endpointSubnet.name]",
            "ocpVersion": "[steps('openshift').ocpVersion]",
			"clientId": "[steps('openshift').servicePrincipal.appId]",
			"clientSecret": "[steps('openshift').servicePrincipal.password]",
			"clientObjectId": "[first(steps('openshift').servicePrincipal.objectId)]",
			"clusterResourceGroup": "[if(equals(steps('openshift').newClusterResourceGroup, 'existing'),steps('openshift').existingClusterResourceGroupName,steps('openshift').newClusterResourceGroupName)]",
			"existingClusterResourceGroup": "[if(equals(steps('openshift').newClusterResourceGroup, 'existing'),true,false)]",
			"baseDomain": "[steps('openshift').domainName.name]",
			"baseDomainRG": "[last(take(split(steps('openshift').domainName.id,'/'),5))]",
			"masterNodeSize": "[steps('openshift').masterNodes]",
			"workerNodeSize": "[steps('openshift').workerNodes]",
			"workerNodeQty": "[steps('openshift').workerCount]",
			"hostEncryption": "[steps('openshift').encryption]",
			"pullSecret": "[steps('openshift').pullSecret]",
            "location": "[location()]",
            "ibmEntitlementKey": "[steps('cp4i').ibmEntitlementKey]",
            "acceptLicense": "[steps('cp4i').acceptLicense]",
			"cp4iVersion": "[steps('cp4i').cp4iEdition.version ]",
			"cp4iLicense": "[steps('cp4i').cp4iEdition.license ]",
			"namespace": "[steps('cp4i').nameSpace]",
			"tagsByResource": "[steps('tags').tagsByResource]"
         }
    }
}
