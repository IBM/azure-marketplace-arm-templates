{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "description": "Azure ARM Template to deploy a Red Hat OpenShift IPI cluster and IBM Cloud Pak for Integration."
    },
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix for resource names. Must start with a letter and be 3 to 10 characters."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure region for the deployment"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[ concat( toLower( parameters('namePrefix') ), substring( uniqueString(resourceGroup().id), 1, 7 ) ) ]",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "Storage account name for the deployment scripts"
            }
        },
        "managedIdName": {
            "type": "string",
            "defaultValue": "[ concat( parameters('namePrefix'), '-id' ) ]",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "Name of the managed identity for the resource group"
            }
        },
        "vaultName": {
            "type": "string",
            "defaultValue": "[ concat( parameters('namePrefix'), '-', substring( uniqueString(resourceGroup().id), 1, 5 ), '-keyvault' ) ]",
            "metadata": {
                "description": "Name of the key vault to store credentials"
            }
        },
        "clusterPasswordSecretName": {
            "type": "string",
            "defaultValue": "cluster-password",
            "metadata": {
                "description": "Name of the secret to create in the key vault for the cluster password"
            }
        },
        "keyName": {
            "type": "string",
            "defaultValue": "[ concat(parameters('namePrefix'), '-sshkey') ]",
            "metadata": {
                "description": "Name of the secret to create in the key vault for the private SSH key"
            }
        },
        "deployPrereqs": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to run the script prerequisites (for debug only)"
            }
        },
        "deployKeyVault": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create the key vault (for debug only)"
            }
        },
        "deployNSG": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create the network security groups for Openshfit (debug only)"
            }
        },
        "deployOCP": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the OpenShift cluster (for debug only)"
            }
        },
        "deployODF": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the ODF operator and cluster"
            }
        },
        "deployCP4I": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy IBM Cloud Pak for Integration (for debug only)"
            }
        },
        "clusterName": {
            "type": "string",
            "defaultValue": "[tolower(concat(substring(parameters('namePrefix'),0,3), substring(uniqueString(resourceGroup().id),0,5)))]",
            "metadata": {
                "description": "Optional name of the cluster. If not provided, will be a random name. Must be in lowercase and less than 8 characters."
            }
        },
        "clientId": {
            "type": "string",
            "metadata": {
                "description": "Service principal id"
            }
        },
        "clientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Service principal secret"
            }
        },
        "clientObjectId": {
            "type": "string",
            "metadata": {
                "description": "Object id for the service principal. Use \"az ad sp list --display-name <service_principal_name> --query '[0].id' -o tsv\""
            }
        },
        "clusterResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The name of the empty resource group into which the cluster resources will be built."
            }
        },
        "existingClusterResourceGroup": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether to create a new cluster resource group or use existing"
            }
        },
        "baseDomain": {
            "type": "string",
            "metadata": {
                "description": "Base domain suffix for OpenShift cluster."
            }
        },
        "baseDomainRG": {
            "type": "string",
            "metadata": {
                "description": "Resource group that contains the DNS zone for the base domain"
            }
        },
        "masterNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D8s_v3",
            "metadata": {
                "description": "VM size for the master nodes"
            }
        },
        "workerNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D16s_v3",
            "metadata": {
                "description": "VM size for the worker nodes"
            }
        },
        "workerNodeQty": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of worker nodes to deploy"
            }
        },
        "ocpVersion": {
            "type": "string",
            "defaultValue": "4.12",
            "metadata": {
                "description": "Openshift version to install"
            }
        },
        "hostEncryption": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether hosts should have host-level encryption enabled, \"Encryption At Host\" (requires activation for Azure subscription)"
            }
        },
        "endpointVisibility": {
            "type": "string",
            "allowedValues": [
                "Public",
                "Private"
            ],
            "defaultValue": "Public",
            "metadata": {
                "description": "Public or Private API & ingress endpoints"
            }
        },
        "pullSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Red Hat OpenShift Pull Secret"
            }
        },
        "publicSshKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Public SSH Key for the OpenShift nodes"
            }
        },
        "storageType": {
            "type": "string",
            "allowedValues": [
                "ODF",
                "AzureFiles"
            ],
            "defaultValue": "ODF",
            "metadata": {
                "description": "The type of persistent storage to deploy"
            }
        },
        "storageSizePerNode": {
            "type": "string",
            "allowedValues": [
                "1Ti",
                "2Ti",
                "3Ti"
            ],
            "defaultValue": "2Ti",
            "metadata": {
                "description": "Size of the storage to provision on each node for the storage cluster (total cluster size will be 3 times this amount)"
            }
        },
        "ibmEntitlementKey": {
            "type": "securestring",
            "metadata": {
                "description": "Entitlement key for IBM container registry"
            }
        },
        "cp4iVersion": {
            "type": "string",
            "metadata": {
                "description": "Version of CP4I to be installed"
            }
        },
        "cp4iLicense": {
            "type": "string",
            "metadata": {
                "description": "License to be used for CP4I installation"
            }
        },
        "acceptLicense": {
            "type": "string",
            "defaultValue": "decline",
            "allowedValues": [
                "accept",
                "decline"
            ],
            "metadata": {
                "description": "Accept IBM License Terms to instantiate software."
            }
        },
        "namespace": {
            "type": "string",
            "defaultValue": "cp4i",
            "metadata": {
                "description": "Namespace for CP4I instance"
            }
        },
        "rgRoleGuidOdf": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "forceUpdateTag property, used to force the execution of the script resource when no other properties have changed."
            }
        },
        "rgRoleGuidSsh": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "forceUpdateTag property, used to force the execution of the script resource when no other properties have changed."
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group containing the virtual network"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "existingVnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether the virtual network already exists"
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/20",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "controlSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "CIDR for the control subnet"
            }
        },
        "controlSubnetName": {
            "type": "string",
            "defaultValue": "control-subnet",
            "metadata": {
                "description": "Name of the OpenShift control subnet"
            }
        },
        "controlNsgName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-',parameters('controlSubnetName'),'-nsg')]",
            "metadata": {
                "description": "Name of the NSG for the control subnet"
            }
        },
        "workerSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "CIDR for the worker subnet"
            }
        },
        "workerSubnetName": {
            "type": "string",
            "defaultValue": "worker-subnet",
            "metadata": {
                "description": "Name of the OpenShift worker subnet"
            }
        },
        "scriptSubnetName": {
            "type": "string",
            "defaultValue": "script-subnet",
            "metadata": {
                "description": "Name of the subnet to attach the deployment script container to. Used for private vnet."
            }
        },
        "scriptSubnetCidr": {
            "type": "string",
            "defaultValue": "10.0.2.0/27",
            "metadata": {
                "description": "Network address of the subnet to attach the deployment script container to"
            }
        },
        "workerNsgName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-',parameters('workerSubnetName'),'-nsg')]",
            "metadata": {
                "description": "Name of the NSG for the worker subnet"
            }
        },
        "existingNodes": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create new machineset for ODF or use existing nodes (existing nodes need to be large enough)"
            }
        },
        "storageClass": {
            "type": "string",
            "defaultValue": "ocs-storagecluster-cephfs",
            "metadata": {
                "description": "Name of the RWX file storage class on the OpenShift cluster."
            }
        },
        "logLevel": {
            "type": "string",
            "allowedValues": [
                "Default",
                "Debug"
            ],
            "defaultValue": "Default",
            "metadata": {
                "description": "Flag to determine level of logging and post deployment clean up"
            }
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for resources"
            }
        },
        "recordDeployment": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to record deployment to Azure telemetery (debug only)"
            }
        },
        "deploymentVersion": {
            "type": "string",
            "defaultValue": "2024-03",
            "metadata": {
                "description": "Deployment version to use"
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Github branch for linked deployments."
            }
        }
    },
    "variables": {
        "baseUrl": "[uri('https://raw.githubusercontent.com/IBM/azure-marketplace-arm-templates/',parameters('branch'))]"
    },
    "resources": [
            { 
                "apiVersion": "2023-07-01",
                "name": "pid-863f503a-9654-4ffe-9149-d0bd97ec7280-partnercenter", 
                "condition": "[parameters('recordDeployment')]",
                "comments": "Resource GUID for Cloud Pak for Integration BYOL marketplace entry",
                "type": "Microsoft.Resources/deployments",
                "properties": {
                    "mode": "Incremental",
                    "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "resources": []
                    }
                }
            },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployPrereqs')]",
            "dependsOn": [
                "[resourceId(parameters('networkResourceGroup'),'Microsoft.Resources/deployments', 'virtualNetwork')]"
            ],
            "name": "scriptPrerequisites",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/script-prequisites/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "privateVnet": {
                        "value": true
                    },
                    "networkResourceGroup": {
                        "value": "[parameters('networkResourceGroup')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('scriptSubnetName')]"
                    },
                    "subnetCidr": {
                        "value": "[parameters('scriptSubnetCidr')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "condition": "[parameters('deployNSG')]",
            "name": "deployNetworkSecurityGroups",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/nsg-ocp/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "controlNsgName": {
                        "value": "[parameters('controlNsgName')]" 
                    },
                    "workerNsgName": {
                        "value": "[parameters('workerNsgName')]" 
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "name": "virtualNetwork",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployNetworkSecurityGroups')]"
            ],
            "resourceGroup": "[parameters('networkResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/virtual-network/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vnetCIDR": {
                        "value": "[parameters('vnetCIDR')]"
                    },
                    "existingVnet": {
                        "value": "[parameters('existingVnet')]"
                    },
                    "controlSubnetCIDR": {
                        "value": "[parameters('controlSubnetCIDR')]"
                    },
                    "controlSubnetName": {
                        "value": "[parameters('controlSubnetName')]"
                    },
                    "controlSubnetNsgId": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployNetworkSecurityGroups'),'2023-07-01').outputs['controlSubnetNsgId'].value]" 
                    },
                    "workerSubnetName": {
                        "value": "[parameters('workerSubnetName')]"
                    },
                    "workerSubnetCIDR": {
                        "value": "[parameters('workerSubnetCIDR')]"
                    },
                    "workerSubnetNsgId": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployNetworkSecurityGroups'),'2023-07-01').outputs['workerSubnetNsgId'].value]" 
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "name": "createKeyVault",
            "condition": "[parameters('deployKeyVault')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/keyvault/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "name": "createSshKeys",
            "condition": "[ equals( parameters('publicSshKey'), '') ]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]",
                "[resourceId('Microsoft.Resources/deployments', 'createKeyVault')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/ssh-keys/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "keyName": {
                        "value": "[parameters('keyName')]"
                    },
                    "createManagedId": {
                        "value": false 
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "rgRoleGuid": {
                        "value": "[parameters('rgRoleGuidSsh')]"
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "name": "deployOpenShift",
            "condition": "[parameters('deployOCP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]",
                "[resourceId('Microsoft.Resources/deployments', 'createSshKeys')]",
                "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/ocp/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "clusterName": {
                        "value": "[parameters('clusterName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "clientId": {
                        "value": "[parameters('clientId')]"
                    },
                    "clientSecret": {
                        "value": "[parameters('clientSecret')]"
                    },
                    "clientObjectId": {
                        "value": "[parameters('clientObjectId')]" 
                    },
                    "baseDomain": {
                        "value": "[parameters('baseDomain')]"
                    },
                    "ocpVersion": {
                        "value": "[parameters('ocpVersion')]"
                    },
                    "baseUrl": {
                        "value": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/ocp/'))]" 
                    },
                    "baseDomainRG": {
                        "value": "[parameters('baseDomainRG')]" 
                    },
                    "pullSecret": {
                        "value": "[parameters('pullSecret')]" 
                    },
                    "publicSshKey": {
                        "value": "[if( not(equals( parameters('publicSshKey'), '' )), parameters('publicSshKey') ,reference( resourceId('Microsoft.Resources/deployments', 'createSshKeys') ).outputs['publicKey'].value )]" 
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetCIDR": {
                        "value": "[parameters('vnetCIDR')]"
                    },
                    "controlSubnetName": {
                        "value": "[parameters('controlSubnetName')]"
                    },
                    "workerSubnetName": {
                        "value": "[parameters('workerSubnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('scriptSubnetName')]"
                    },
                    "masterNodeSize": {
                        "value": "[parameters('masterNodeSize')]"
                    },
                    "workerNodeSize": {
                        "value": "[parameters('workerNodeSize')]"
                    },
                    "workerNodeQty": {
                        "value": "[parameters('workerNodeQty')]"
                    },
                    "hostEncryption": {
                        "value": "[parameters('hostEncryption')]"
                    },
                    "clusterResourceGroup": {
                        "value": "[parameters('clusterResourceGroup')]" 
                    },
                    "existingClusterResourceGroup": {
                        "value": "[parameters('existingClusterResourceGroup')]"
                    },
                    "networkResourceGroup": {
                        "value": "[parameters('networkResourceGroup')]" 
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "clusterPasswordSecretName": {
                        "value": "[parameters('clusterPasswordSecretName')]"
                    },
                    "useVault": {
                        "value": "[parameters('deployKeyVault')]"
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]"
                    },
                    "publish": {
                        "value": "[if(equals(parameters('endpointVisibility'),'Private'),'Internal','External')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "name": "deployOdf",
            "condition": "[and(parameters('deployODF'),equals(parameters('storageType'),'ODF'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]",
                "[resourceId('Microsoft.Resources/deployments', 'deployOpenShift')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/odf-ocp/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "baseUrl": {
                        "value": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/odf-ocp/'))]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "rgRoleGuid": {
                        "value": "[parameters('rgRoleGuidOdf')]" 
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "ocpApiServer": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2023-07-01').outputs['apiServer'].value]" 
                    },
                    "ocpUsername": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2023-07-01').outputs['adminUser'].value]" 
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "clusterPasswordSecretName": {
                        "value": "[parameters('clusterPasswordSecretName')]"
                    },
                    "storageSizePerNode": {
                        "value": "[parameters('storageSizePerNode')]"
                    },
                    "existingNodes": {
                        "value": "[parameters('existingNodes')]" 
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('scriptSubnetName')]" 
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2023-07-01",
            "name": "deployCloudPakForIntegration",
            "condition": "[parameters('deployCP4I')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]",
                "[resourceId('Microsoft.Resources/deployments', 'deployOpenShift')]",
                "[resourceId('Microsoft.Resources/deployments', 'deployOdf')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/deploy-cp4i/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "ibmEntitlementKey": {
                        "value": "[parameters('ibmEntitlementKey')]"
                    },
                    "cp4iVersion": {
                        "value": "[parameters('cp4iVersion')]"
                    },
                    "cp4iLicense": {
                        "value": "[parameters('cp4iLicense')]"
                    },
                    "acceptLicense": {
                        "value": "[parameters('acceptLicense')]"
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "storageClass": {
                        "value": "[parameters('storageClass')]"
                    },
                    "ocpDist": {
                        "value": "IPI"
                    },
                    "apiServer": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2023-07-01').outputs['apiServer'].value]"
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "secretName": {
                        "value": "[parameters('clusterPasswordSecretName')]"
                    },
                    "ocpAdministrator": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2023-07-01').outputs['adminUser'].value]" 
                    },
                    "deployOnVnet": {
                        "value": "[if(equals(parameters('endpointVisibility'),'Private'),bool('true'),bool('false'))]"
                    },
                    "namespace": {
                        "value": "[parameters('namespace')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    },
                    "createSubnet": {
                        "value": false
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "networkResourceGroup": {
                        "value": "[parameters('networkResourceGroup')]"
                    },
                    "subnetName": {
                        "value": "[parameters('scriptSubnetName')]"
                    },
                    "subnetCidr": {
                        "value": "[parameters('scriptSubnetCidr')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "clusterURL": {
            "type": "string",
            "condition": "[parameters('deployOCP')]",
            "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2023-07-01').outputs['consoleURL'].value]"
        },
        "platformNavigatorURL": {
            "type": "string",
            "condition": "[equals(parameters('acceptLicense'),'accept')]",
            "value": "[reference(resourceId('Microsoft.Resources/deployments','deployCloudPakForIntegration'),'2023-07-01').outputs['cp4iConsoleURL'].value]"
        }
    }
}