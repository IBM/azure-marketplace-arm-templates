{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix for resource names"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure location for resources"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'), 'script',substring(uniqueString(resourceGroup().id),1,7))]",
            "metadata": {
                "description": "Name for the storage account for the script execution"
            }            
        },
        "managedIdName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-script-sp')]",
            "metadata": {
                "description": "Name of the managed identity used for deployment scripts"
            }
        },
        "deployARO": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy a new ARO cluster"
            }
        },
        "apiVisibility": {
            "type": "string",
            "allowedValues": [
                "Public",
                "Private"
            ],
            "defaultValue": "Public",
            "metadata": {
                "description": "Public or Private API endpoint"
            }
        },
        "ingressVisibility": {
            "type": "string",
            "allowedValues": [
                "Public",
                "Private"
            ],
            "defaultValue": "Public",
            "metadata": {
                "description": "Public or Private workload ingress endpoint"
            }
        },
        "clusterName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'), '-aro')]",
            "metadata": {
                "description": "Name for the ARO cluster"
            }
        },
        "aroVersion": {
            "type": "string",
            "metadata": {
                "description": "Version of ARO to deploy. Format 4.x.x"
            }
        },
        "spClientId" : {
            "type": "string",
            "metadata": {
                "description" : "The app ID of the Service Principal (client id)"
            }
        },
        "spClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "The service principal secret key."
            }
        },
        "spObjectId": {
            "type": "String",
            "metadata": {
                "description": "The ObjectID of the Service Principal"
            }
        },
        "rpObjectId": {
            "type": "string",
            "metadata": {
                "description": "Red Hat OpenShift Resource Provider Object Id - obtain using (az ad sp list --display-name \"Azure Red Hat OpenShift RP\" --query \"[0].id\" -o tsv)"
            }
        },
        "pullSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Red Hat OpenShift Pull Secret"
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "Github branch for linked deployments."
            }
        },
        "deploymentVersion": {
            "type": "string",
            "defaultValue": "2024-03",
            "metadata": {
                "description": "Deployment version to use"
            }
        },
        "existingVnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether the virtual network already exists"
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "The resource group containing the virtual network. Service principal must have permissions for this network."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/20",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "controlSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "CIDR for the control subnet"
            }
        },
        "workerSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "CIDR for the worker subnet"
            }
        },
        "controlSubnetName": {
            "type": "string",
            "defaultValue": "control-subnet",
            "metadata": {
                "description": "Name of the control / master subnet"
            }
        },
        "workerSubnetName": {
            "type": "string",
            "defaultValue": "worker-subnet",
            "metadata": {
                "description": "Name of the worker subnet"
            }
        },
        "scriptSubnetName": {
            "type": "string",
            "defaultValue": "script-subnet",
            "metadata": {
                "description": "Name of the subnet to attach the deployment script container to. Used for private vnet."
            }
        },
        "scriptSubnetCidr": {
            "type": "string",
            "defaultValue": "10.0.1.0/27",
            "metadata": {
                "description": "Network address of the subnet to attach the deployment script container to"
            }
        },
        "domain": {
            "type": "string",
            "defaultValue": "[concat(toLower(first(parameters('namePrefix'))),substring(uniqueString(resourceGroup().id),1,7))]",
            "metadata": {
                "description": "Domain name prefix for the ARO cluster. Default is generated from resource group id."
            }
        },
        "podCIDR": {
            "type": "string",
            "defaultValue": "10.128.0.0/14",
            "metadata": {
                "description": "CIDR for the POD virtual subnet within the cluster"
            }
        },
        "serviceCIDR": {
            "type": "string",
            "defaultValue": "172.30.0.0/16",
            "metadata": {
                "description": "CIDR for the service virtual subnet within the cluster"
            }
        },
        "masterSize": {
            "type": "string",
            "defaultValue": "Standard_D8s_v3",
            "metadata": {
                "description": "VM size for master/control nodes"
            }
        },
        "workerSize": {
            "type": "string",
            "defaultValue": "Standard_D16s_v3",
            "metadata": {
                "description": "VM size for worker nodes"
            }
        },
        "workerCount": {
            "type": "int",
            "defaultValue": 3,
            "minValue": 3,
            "maxValue": 2000,
            "metadata": {
                "description": "Number of compute nodes to deploy"
            }
        },
        "encryption" : {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to encrypt storage at rest"
            }
        },
        "workerDiskSize": {
            "type": "int",
            "defaultValue": 128,
            "minValue": 128,
            "maxValue": 32767,
            "metadata": {
                "description": "Size of system disk on each worker node"
            }
        },
        "deployODF": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the ODF operator and cluster"
            }
        },
        "storageSizePerNode": {
            "type": "string",
            "allowedValues": [
                "1Ti",
                "2Ti",
                "3Ti"
            ],
            "defaultValue": "2Ti",
            "metadata": {
                "description": "Size of the storage to provision on each node for the storage cluster (total cluster size will be 3 times this amount)"
            }
        },
        "deployCP4I": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy CP4I"
            }
        },
        "ibmEntitlementKey": {
            "type": "securestring",
            "metadata": {
                "description": "Entitlement key for IBM container registry"
            }
        },
        "cp4iVersion": {
            "type": "string",
            "metadata": {
                "description": "Version of CP4I to be installed"
            }
        },
        "cp4iLicense": {
            "type": "string",
            "metadata": {
                "description": "License to be used for CP4I installation"
            }
        },
        "acceptLicense": {
            "type": "string",
            "defaultValue": "decline",
            "allowedValues": [
                "accept",
                "decline"
            ],
            "metadata": {
                "description": "Accept IBM License Terms to instantiate software."
            }
        },
        "storageClass": {
            "type": "string",
            "defaultValue": "ocs-storagecluster-cephfs",
            "metadata": {
                "description": "Name of the RWX file storage class on the OpenShift cluster."
            }
        },
        "namespace": {
            "type": "string",
            "defaultValue": "cp4i",
            "metadata": {
                "description": "Namespace for CP4I instance"
            }
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for the resources"
            }
        }
    },
    "variables": {
        "baseUrl": "[uri('https://raw.githubusercontent.com/IBM/azure-marketplace-arm-templates/',parameters('branch'))]"
    },
    "resources": [
        { 
            "apiVersion": "2021-04-01",
            "name": "pid-863f503a-9654-4ffe-9149-d0bd97ec7280-partnercenter", 
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "virtualNetwork",
            "resourceGroup": "[parameters('networkResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vnetCIDR": {
                        "value": "[parameters('vnetCIDR')]"
                    },
                    "existingVnet": {
                        "value": "[parameters('existingVnet')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetCIDR": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "existingVnet": {
                            "type": "bool"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2022-07-01",
                            "name": "[parameters('vnetName')]",
                            "condition": "[not(parameters('existingVnet'))]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), parameters('tagsByResource')['Microsoft.Network/virtualNetworks'], json('{}')) ]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('vnetCIDR')]"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId(parameters('networkResourceGroup'),'Microsoft.Resources/deployments', 'virtualNetwork')]"
            ],
            "name": "scriptPrerequisites",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/script-prequisites/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "privateVnet": {
                        "value": true
                    },
                    "networkResourceGroup": {
                        "value": "[parameters('networkResourceGroup')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('scriptSubnetName')]"
                    },
                    "subnetCidr": {
                        "value": "[parameters('scriptSubnetCidr')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "condition": "[parameters('deployARO')]",
            "dependsOn": [
                "[resourceId(parameters('networkResourceGroup'),'Microsoft.Resources/deployments', 'virtualNetwork')]",
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]"
            ],
            "name": "aroCluster",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/aro/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "createVnet": {
                        "value": false
                    },
                    "clusterName": {
                        "value": "[parameters('clusterName')]"
                    },
                    "aroVersion": {
                        "value": "[parameters('aroVersion')]"
                    },
                    "spClientId" : {
                        "value": "[parameters('spClientId')]"
                    },
                    "spClientSecret": {
                        "value": "[parameters('spClientSecret')]"
                    },
                    "spObjectId": {
                        "value": "[parameters('spObjectId')]"
                    },
                    "rpObjectId": {
                        "value": "[parameters('rpObjectId')]"
                    },
                    "pullSecret": {
                        "value": "[parameters('pullSecret')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "networkResourceGroup": {
                        "value": "[parameters('networkResourceGroup')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetCIDR": {
                        "value": "[parameters('vnetCIDR')]"
                    },
                    "controlSubnetCIDR": {
                        "value": "[parameters('controlSubnetCIDR')]"
                    },
                    "workerSubnetCIDR": {
                        "value": "[parameters('workerSubnetCIDR')]"
                    },
                    "controlSubnetName": {
                        "value": "[parameters('controlSubnetName')]"
                    },
                    "workerSubnetName": {
                        "value": "[parameters('workerSubnetName')]"
                    },
                    "domain": {
                        "value": "[parameters('domain')]"
                    },
                    "podCIDR": {
                        "value": "[parameters('podCIDR')]"
                    },
                    "serviceCIDR": {
                        "value": "[parameters('serviceCIDR')]"
                    },
                    "masterSize": {
                        "value": "[parameters('masterSize')]"
                    },
                    "workerSize": {
                        "value": "[parameters('workerSize')]"
                    },
                    "workerCount": {
                        "value": "[parameters('workerCount')]"
                    },
                    "workerDiskSize": {
                        "value": "[parameters('workerDiskSize')]"
                    },
                    "encryption": {
                        "value": "[parameters('encryption')]"
                    },
                    "fipsEnabled": {
                        "value": false
                    },
                    "apiVisibility": {
                        "value": "[parameters('apiVisibility')]"
                    },
                    "ingressVisibility": {
                        "value": "[parameters('ingressVisibility')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "condition": "[parameters('deployODF')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'aroCluster')]",
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]"
            ],
            "name": "odfCluster",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/with-aro/',parameters('deploymentVersion'),'/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "aroClusterName": {
                        "value": "[parameters('clusterName')]"
                    },
                    "existingNodes": {
                        "value": "yes"
                    },
                    "storageSizePerNode": {
                        "value": "[parameters('storageSizePerNode')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "condition": "[parameters('deployCP4I')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]",
                "[resourceId('Microsoft.Resources/deployments', 'aroCluster')]",
                "[resourceId('Microsoft.Resources/deployments', 'odfCluster')]"
            ],
            "name": "cp4iDeployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('baseUrl'), concat(parameters('branch'), '/cloud-pak-for-integration/',parameters('deploymentVersion'),'/deploy-cp4i/azuredeploy.json'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "ibmEntitlementKey": {
                        "value": "[parameters('ibmEntitlementKey')]"
                    },
                    "cp4iVersion": {
                        "value": "[parameters('cp4iVersion')]"
                    },
                    "cp4iLicense": {
                        "value": "[parameters('cp4iLicense')]"
                    },
                    "acceptLicense": {
                        "value": "[parameters('acceptLicense')]"
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "storageClass": {
                        "value": "[parameters('storageClass')]"
                    },
                    "ocpDist": {
                        "value": "ARO"
                    },
                    "aroClusterName": {
                        "value": "[parameters('clusterName')]"
                    },
                    "namespace": {
                        "value": "[parameters('namespace')]"
                    },
                    "branch": {
                        "value": "[parameters('branch')]"
                    },
                    "deploymentVersion": {
                        "value": "[parameters('deploymentVersion')]"
                    },
                    "deployOnVnet": {
                        "value": "[if(equals(parameters('apiVisibility'),'Private'),bool('true'),bool('false'))]"
                    },
                    "createSubnet": {
                        "value": false
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "networkResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "subnetName": {
                        "value": "[parameters('scriptSubnetName')]"
                    },
                    "subnetCidr": {
                        "value": "[parameters('scriptSubnetCidr')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "aroClusterURL": {
            "type": "string",
            "condition": "[parameters('deployARO')]",
            "value": "[uri(concat('https://console-openshift-console.apps.',parameters('domain'),'.',parameters('location'),'.aroapp.io/'),'')]"
        },
        "aroClusterCredentials": {
            "type": "string",
            "condition": "[parameters('deployARO')]",
            "value": "[concat('Use \"az aro list-credentials -g ',resourceGroup().name,' -n ',reference(resourceId('Microsoft.Resources/deployments','aroCluster'),'2021-04-01').outputs['clusterName'].value,'\" to obtain credentials')]"
        },
        "platformNavigatorURL": {
            "type": "string",
            "condition": "[equals(parameters('acceptLicense'),'accept')]",
            "value": "[uri(concat('https://cp4i-navigator-pn-',parameters('namespace'),'.apps.',parameters('domain'),'.',parameters('location'),'.aroapp.io/'),'')]"
        }
    }
}