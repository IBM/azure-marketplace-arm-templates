{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "rgRoleGuid": {
            "type": "string"
        },
        "createStorageAccount": {
            "type": "bool"
        },
        "storageAccountName": {
            "type": "string"         
        },
        "createManagedIdentity": {
            "type": "bool"
        },
        "managedIdName": {
            "type": "string"
        },
        "ocpApiServer": {
            "type": "string"
        },
        "ocpUsername": {
            "type": "string"
        },
        "vaultName": {
            "type": "string"
        },
        "clusterPasswordSecretName": {
            "type": "string"
        },
        "storageSizePerNode": {
            "type": "string"
        },
        "existingNodes": {
            "type": "bool"
        },
        "vnetName": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "baseUrl": {
            "type": "string"
        },
        "tagsByResource": {
            "type": "object"
        }
        
    },
    "variables": {
        "containerGroupName": "[concat(parameters('namePrefix'), '-odf-cg')]",
        "scriptName": "[concat(parameters('namePrefix'),'-odf-script')]",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "roleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')), variables('roleDefinitionId'), resourceGroup().id)]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "comments": "Deploys ODF onto an OpenShift IPI cluster",
            "name": "[variables('scriptName')]",
            "location": "[parameters('location')]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), parameters('tagsByResource')['Microsoft.Resources/deploymentScripts'], json('{}')) ]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName'))]": {}
                }
            },
            "kind": "AzureCLI",
            "properties": {
                "forceUpdateTag": "[parameters('rgRoleGuid')]",
                "containerSettings": {
                    "containerGroupName": "[variables('containerGroupName')]",
                    "subnetIds": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnetName'))]"
                        }
                    ]
                },
                "storageAccountSettings": {
                    "storageAccountName": "[parameters('storageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value]"
                },
                "azCliVersion": "2.45.0",  
                "environmentVariables": [
                    {
                        "name": "API_SERVER",
                        "value": "[parameters('ocpApiServer')]"
                    },
                    {
                        "name": "OCP_USERNAME",
                        "value": "[parameters('ocpUsername')]"
                    },
                    {
                        "name": "VAULT_NAME",
                        "value": "[parameters('vaultName')]"
                    },
                    {
                        "name": "SECRET_NAME",
                        "value": "[parameters('clusterPasswordSecretName')]"
                    },
                    {
                        "name": "STORAGE_SIZE",
                        "value": "[parameters('storageSizePerNode')]"
                    },
                    {
                        "name": "CLUSTER_LOCATION",
                        "value": "[parameters('location')]"
                    },
                    {
                        "name": "EXISTING_NODES",
                        "value": "[if(parameters('existingNodes'),'yes','no')]"
                    }
                ],
                "primaryScriptUri": "[uri(parameters('baseUrl'),'scripts/deploy-odf.sh')]",
                "supportingScriptUris": [
                    "[uri(parameters('baseUrl'),'scripts/common.sh')]"
                ],
                "timeout": "PT90M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            },
            "dependsOn": [
                "[variables('roleDefinitionName')]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "condition": "[parameters('createStorageAccount')]",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Storage/storageAccounts'), parameters('tagsByResource')['Microsoft.Storage/storageAccounts'], json('{}')) ]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('managedIdName')]",
            "condition": "[parameters('createManagedIdentity')]",
            "location": "[parameters('location')]",
            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), parameters('tagsByResource')['Microsoft.ManagedIdentity/userAssignedIdentities'], json('{}')) ]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('roleDefinitionName')]",
            "condition": "[parameters('createManagedIdentity')]",
            "dependsOn": [
                "[parameters('managedIdName')]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "principalId": "[reference(parameters('managedIdName'), '2018-11-30').principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
            }
        }
    ]
}