{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "description": "Azure ARM Template to deploy a Red Hat OpenShift IPI cluster and IBM Cloud Pak for Integration."
    },
    // TO DO: Remove allowed values from branch before publishing
    // TO DO: Remove duplicate resources that are not used like useridentity and storage
    // ISSUE: Removes existing subnet in existing vnet
    "parameters": {
        "namePrefix": {
            "type": "string",
            "minLength": 3,
            "maxLength": 10,
            "metadata": {
                "description": "Prefix for resource names. Must start with a letter and be 3 to 10 characters."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure region for the deployment"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[ concat( toLower( parameters('namePrefix') ), substring( uniqueString(resourceGroup().id), 1, 7 ) ) ]",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "Storage account name for the deployment scripts"
            }
        },
        "managedIdName": {
            "type": "string",
            "defaultValue": "[ concat( parameters('namePrefix'), '-id' ) ]",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "Name of the managed identity for the resource group"
            }
        },
        "vaultName": {
            "type": "string",
            "defaultValue": "[ concat( parameters('namePrefix'), '-', substring( uniqueString(resourceGroup().id), 1, 5 ), '-keyvault' ) ]",
            "metadata": {
                "description": "Name of the key vault to store credentials"
            }
        },
        "clusterPasswordSecretName": {
            "type": "string",
            "defaultValue": "cluster-password",
            "metadata": {
                "description": "Name of the secret to create in the key vault for the cluster password"
            }
        },
        "keyName": {
            "type": "string",
            "defaultValue": "[ concat(parameters('namePrefix'), '-sshkey') ]",
            "metadata": {
                "description": "Name of the secret to create in the key vault for the private SSH key"
            }
        },
        "deployPrereqs": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to run the script prerequisites (for debug only)"
            }
        },
        "deployKeyVault": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create the key vault (for debug only)"
            }
        },
        "deployOCP": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the OpenShift cluster (for debug only)"
            }
        },
        "deployODF": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy the ODF operator and cluster"
            }
        },
        "deployCP4I": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to deploy IBM Cloud Pak for Integration (for debug only)"
            }
        },
        "clientId": {
            "type": "string",
            "metadata": {
                "description": "Service principal id"
            }
        },
        "clientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Service principal secret"
            }
        },
        "clientObjectId": {
            "type": "string",
            "metadata": {
                "description": "Object id for the service principal. Use \"az ad sp list --display-name <service_principal_name> --query '[0].id' -o tsv\""
            }
        },
        "clusterResourceGroup": {
            "type": "string",
            "defaultValue": "[concat( parameters('namePrefix'), '-', substring( uniqueString(resourceGroup().id), 1, 5 ), '-openshift') ]",
            "metadata": {
                "description": "The name of the empty resource group into which the cluster resources will be built."
            }
        },
        "existingClusterResourceGroup": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether to create a new cluster resource group or use existing"
            }
        },
        "baseDomain": {
            "type": "string",
            "metadata": {
                "description": "Base domain suffix for OpenShift cluster."
            }
        },
        "baseDomainRG": {
            "type": "string",
            "metadata": {
                "description": "Resource group that contains the DNS zone for the base domain"
            }
        },
        "masterNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D8s_v3",
            "metadata": {
                "description": "VM size for the master nodes"
            }
        },
        "workerNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D16s_v3",
            "metadata": {
                "description": "VM size for the worker nodes"
            }
        },
        "workerNodeQty": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of worker nodes to deploy"
            }
        },
        "ocpVersion": {
            "type": "string",
            "defaultValue": "4.12",
            "metadata": {
                "description": "Openshift version to install"
            }
        },
        "hostEncryption": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether hosts should have host-level encryption enabled, \"Encryption At Host\" (requires activation for Azure subscription)"
            }
        },
        "pullSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Red Hat OpenShift Pull Secret"
            }
        },
        "publicSshKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Public SSH Key for the OpenShift nodes"
            }
        },
        "storageType": {
            "type": "string",
            "allowedValues": [
                "ODF",
                "AzureFiles"
            ],
            "defaultValue": "ODF",
            "metadata": {
                "description": "The type of persistent storage to deploy"
            }
        },
        "storageSizePerNode": {
            "type": "string",
            "allowedValues": [
                "1Ti",
                "2Ti",
                "3Ti"
            ],
            "defaultValue": "2Ti",
            "metadata": {
                "description": "Size of the storage to provision on each node for the storage cluster (total cluster size will be 3 times this amount)"
            }
        },
        "ibmEntitlementKey": {
            "type": "securestring",
            "metadata": {
                "description": "Entitlement key for IBM container registry"
            }
        },
        "cp4iVersion": {
            "type": "string",
            "metadata": {
                "description": "Version of CP4I to be installed"
            }
        },
        "cp4iLicense": {
            "type": "string",
            "metadata": {
                "description": "License to be used for CP4I installation"
            }
        },
        "acceptLicense": {
            "type": "string",
            "defaultValue": "decline",
            "allowedValues": [
                "accept",
                "decline"
            ],
            "metadata": {
                "description": "Accept IBM License Terms to instantiate software."
            }
        },
        "namespace": {
            "type": "string",
            "defaultValue": "cp4i",
            "metadata": {
                "description": "Namespace for CP4I instance"
            }
        },
        "rgRoleGuidCp4i": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "forceUpdateTag property, used to force the execution of the script resource when no other properties have changed."
            }
        },
        "rgRoleGuidOcp": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "forceUpdateTag property, used to force the execution of the script resource when no other properties have changed."
            }
        },
        "rgRoleGuidOdf": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "forceUpdateTag property, used to force the execution of the script resource when no other properties have changed."
            }
        },
        "rgRoleGuidSsh": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "forceUpdateTag property, used to force the execution of the script resource when no other properties have changed."
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group containing the virtual network"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "existingVnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Flag to determine whether the virtual network already exists"
            }
        },
        "vnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/20",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "controlSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "CIDR for the control subnet"
            }
        },
        "controlSubnetName": {
            "type": "string",
            "defaultValue": "control-subnet",
            "metadata": {
                "description": "Name of the OpenShift control subnet"
            }
        },
        "controlNsgName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-',parameters('controlSubnetName'),'-nsg')]",
            "metadata": {
                "description": "Name of the NSG for the control subnet"
            }
        },
        "workerSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "CIDR for the worker subnet"
            }
        },
        "workerSubnetName": {
            "type": "string",
            "defaultValue": "worker-subnet",
            "metadata": {
                "description": "Name of the OpenShift worker subnet"
            }
        },
        "endpointSubnetName": {
            "type": "string",
            "defaultValue": "endpoint-subnet",
            "metadata": {
                "description": "Name of the endpoint subnet"
            }
        },
        "endpointSubnetCIDR": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "CIDR for the endpoint subnet"
            }
        },
        "workerNsgName": {
            "type": "string",
            "defaultValue": "[concat(parameters('namePrefix'),'-',parameters('workerSubnetName'),'-nsg')]",
            "metadata": {
                "description": "Name of the NSG for the worker subnet"
            }
        },
        "existingNodes": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether to create new machineset for ODF or use existing nodes (existing nodes need to be large enough)"
            }
        },
        "logLevel": {
            "type": "string",
            "allowedValues": [
                "Default",
                "Debug"
            ],
            "defaultValue": "Default",
            "metadata": {
                "description": "Flag to determine level of logging and post deployment clean up"
            }
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Tags for resources"
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "allowedValues": [
                "main",
                "52-add-ocp-ipi-build-plan-for-cp4i"
            ],
            "metadata": {
                "description": "Github branch for linked deployments."
            }
        }
    },
    "variables": {
        "baseUrl": "[uri('https://raw.githubusercontent.com/IBM/azure-marketplace-arm-templates/',parameters('branch'))]",
        "storageClass": {
            "ODF": "ocs-storagecluster-cephfs",
            "AzureFiles": "azure-files-csi"
        }
    },
    "resources": [
            { 
                "apiVersion": "2021-04-01",
                "name": "pid-863f503a-9654-4ffe-9149-d0bd97ec7280-partnercenter", 
                "comments": "Resource GUID for Cloud Pak for Integration BYOL marketplace entry",
                "type": "Microsoft.Resources/deployments",
                "properties": {
                    "mode": "Incremental",
                    "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "resources": []
                    }
                }
            },
            {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "scriptPrerequisites",
            "condition": "[parameters('deployPrereqs')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('endpointSubnetName')]" 
                    },
                    "subnetCidr": {
                        "value": "[parameters('endpointSubnetCIDR')]" 
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "storageAccountName": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "managedIdName": {
                            "type": "string"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "subnetName": {
                            "type": "string"
                        },
                        "subnetCidr": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                        "roleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')), variables('roleDefinitionId'), resourceGroup().id)]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2023-01-01",
                            "name": "[parameters('storageAccountName')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Storage/storageAccounts'), parameters('tagsByResource')['Microsoft.Storage/storageAccounts'], json('{}')) ]",
                            "location": "[parameters('location')]",
                            "sku": {
                                "name": "Standard_LRS",
                                "tier": "Standard"
                            },
                            "kind": "StorageV2",
                            "properties": {
                                "accessTier": "Hot"
                            }
                        },
                        {
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "apiVersion": "2018-11-30",
                            "name": "[parameters('managedIdName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), parameters('tagsByResource')['Microsoft.ManagedIdentity/userAssignedIdentities'], json('{}')) ]"
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[variables('roleDefinitionName')]",
                            "dependsOn": [
                                "[parameters('managedIdName')]"
                            ],
                            "properties": {
                                "roleDefinitionId": "[variables('roleDefinitionId')]",
                                "principalId": "[reference(parameters('managedIdName'), '2018-11-30').principalId]",
                                "scope": "[resourceGroup().id]",
                                "principalType": "ServicePrincipal"
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2023-04-01",
                            "name": "[format('{0}/{1}', parameters('vnetName'), parameters('subnetName'))]",
                            "properties": {
                                "addressPrefix": "[parameters('subnetCidr')]",
                                "serviceEndpoints": [
                                {
                                "service": "Microsoft.Storage"
                                }
                                ],
                                "delegations": [
                                    {
                                        "name": "Microsoft.ContainerInstance.containerGroups",
                                        "properties": {
                                            "serviceName": "Microsoft.ContainerInstance/containerGroups"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
                            "name": "[guid(tenantResourceId('Microsoft.Authorization/roleDefinitions', '69566ab7-960f-475b-8e7c-b3118f30c6bd'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')))]",
                            "properties": {
                                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')), '2023-01-31').principalId]",
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', '69566ab7-960f-475b-8e7c-b3118f30c6bd')]",
                                "principalType": "ServicePrincipal"
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName'))]"
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "deployNetworkSecurityGroups",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "controlNsgName": {
                        "value": "[parameters('controlNsgName')]" 
                    },
                    "workerNsgName": {
                        "value": "[parameters('workerNsgName')]" 
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "controlNsgName": {
                            "type": "string"
                        },
                        "workerNsgName": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2022-11-01",
                            "name": "[parameters('controlNsgName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), parameters('tagsByResource')['Microsoft.Network/networkSecurityGroups'], json('{}')) ]",
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "AllowAnyPort6443Inbound",
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('controlNsgName'), 'AllowAnyPort6443Inbound')]",
                                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                                        "properties": {
                                            "protocol": "TCP",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "6443",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 120,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowAnyPort22623Inbound",
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('controlNsgName'), 'AllowAnyPort22623Inbound')]",
                                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                                        "properties": {
                                            "protocol": "TCP",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "22623",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 130,
                                            "direction": "Inbound"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2022-11-01",
                            "name": "[parameters('workerNsgName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), parameters('tagsByResource')['Microsoft.Network/networkSecurityGroups'], json('{}')) ]",
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "AllowAnyHTTPInbound",
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('workerNsgName'), 'AllowAnyHTTPInbound')]",
                                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                                        "properties": {
                                            "protocol": "TCP",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "80",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 100,
                                            "direction": "Inbound"
                                        }
                                    },
                                    {
                                        "name": "AllowAnyHTTPSInbound",
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('workerNsgName'), 'AllowAnyHTTPSInbound')]",
                                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                                        "properties": {
                                            "protocol": "TCP",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "443",
                                            "sourceAddressPrefix": "*",
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 110,
                                            "direction": "Inbound"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": {
                        "controlSubnetNsgid": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('controlNsgName'))]"
                        },
                        "workerSubnetNsgId": {
                            "type": "string",
                            "value": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('workerNsgName'))]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "virtualNetwork",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployNetworkSecurityGroups')]"
            ],
            "resourceGroup": "[parameters('networkResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vnetCIDR": {
                        "value": "[parameters('vnetCIDR')]"
                    },
                    "controlSubnetCIDR": {
                        "value": "[parameters('controlSubnetCIDR')]"
                    },
                    "controlSubnetName": {
                        "value": "[parameters('controlSubnetName')]"
                    },
                    "controlSubnetNsgId": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployNetworkSecurityGroups'),'2022-09-01').outputs['controlSubnetNsgId'].value]" 
                    },
                    "workerSubnetName": {
                        "value": "[parameters('workerSubnetName')]"
                    },
                    "workerSubnetCIDR": {
                        "value": "[parameters('workerSubnetCIDR')]"
                    },
                    "workerSubnetNsgId": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployNetworkSecurityGroups'),'2022-09-01').outputs['workerSubnetNsgId'].value]" 
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetCIDR": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "controlSubnetName": {
                            "type": "string"
                        },
                        "controlSubnetCIDR": {
                            "type": "string"
                        },
                        "controlSubnetNsgId": {
                            "type": "string"
                        },
                        "workerSubnetName": {
                            "type": "string"
                        },
                        "workerSubnetCIDR": {
                            "type": "string"
                        },
                        "workerSubnetNsgId": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "variables": {
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2022-07-01",
                            "name": "[parameters('vnetName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), parameters('tagsByResource')['Microsoft.Network/virtualNetworks'], json('{}')) ]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('vnetCIDR')]"
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2023-04-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                            ],
                            "name": "[concat(parameters('vnetName'), '/' ,parameters('controlSubnetName'))]",
                            "properties": {
                                "addressPrefix": "[parameters('controlSubnetCIDR')]",
                                "privateEndpointNetworkPolicies": "Disabled",
                                "privateLinkServiceNetworkPolicies": "Enabled",
                                "networkSecurityGroup": {
                                    "id": "[parameters('controlSubnetNsgId')]"
                                },
                                "serviceEndpoints": [
                                    {
                                        "service": "Microsoft.ContainerRegistry"
                                    },
                                    {
                                        "service": "Microsoft.Storage"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "2023-04-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('controlSubnetName'))]"
                            ],
                            "name": "[concat(parameters('vnetName'), '/' ,parameters('workerSubnetName'))]",
                            "properties": {
                                "addressPrefix": "[parameters('workerSubnetCIDR')]",
                                "privateEndpointNetworkPolicies": "Disabled",
                                "privateLinkServiceNetworkPolicies": "Enabled",
                                "networkSecurityGroup": {
                                    "id": "[parameters('workerSubnetNsgId')]"
                                },
                                "serviceEndpoints": [
                                    {
                                        "service": "Microsoft.ContainerRegistry"
                                    },
                                    {
                                        "service": "Microsoft.Storage"
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "createKeyVault",
            "condition": "[parameters('deployKeyVault')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vaultName": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "createManagedIdentity": {
                            "type": "bool"
                        },
                        "managedIdName": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
                        "vaultSku": {
                                "name": "standard",
                                "family": "A"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults",
                            "apiVersion": "2022-11-01",
                            "name": "[parameters('vaultName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.KeyVault/vaults'), parameters('tagsByResource')['Microsoft.KeyVault/vaults'], json('{}')) ]",
                            "properties":{
                                "enableRbacAuthorization": true,
                                "tenantId": "[tenant().tenantId]",
                                "sku": "[variables('vaultSku')]"
                            }
                        },
                        {
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "apiVersion": "2018-11-30",
                            "name": "[parameters('managedIdName')]",
                            "condition": "[parameters('createManagedIdentity')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), parameters('tagsByResource')['Microsoft.ManagedIdentity/userAssignedIdentities'], json('{}')) ]"
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2020-10-01-preview",
                            "dependsOn": [
                                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaultName'))]"
                            ],
                            "scope": "[concat('Microsoft.KeyVault/vaults/', parameters('vaultName'))]",
                            "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')), variables('roleDefinitionId'), resourceGroup().id)]",
                            "properties": {
                                "roleDefinitionId": "[variables('roleDefinitionId')]",
                                "principalId": "[reference(parameters('managedIdName'), '2018-11-30').principalId]",
                                "principalType": "ServicePrincipal"
                                }       
                        }
                    ],
                    "outputs": {}
                    
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "createSshKeys",
            "condition": "[ equals( parameters('publicSshKey'), '') ]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]",
                "[resourceId('Microsoft.Resources/deployments', 'createKeyVault')]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "keyName": {
                        "value": "[parameters('keyName')]"
                    },
                    "createManagedId": {
                        "value": false 
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "rgRoleGuid": {
                        "value": "[parameters('rgRoleGuidSsh')]"
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "namePrefix": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "storageAccountName": {
                            "type": "string"
                        },
                        "managedIdName": {
                            "type": "string"
                        },
                        "vaultName": {
                            "type": "string"
                        },
                        "keyName": {
                            "type": "string"
                        },
                        "createManagedId": {
                            "type": "bool"
                        },
                        "createStorageAccount": {
                            "type": "bool"
                        },
                        "rgRoleGuid": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "containerGroupName": "[concat(parameters('namePrefix'), '-create-ssh-cg')]",
                        "azureCliVersion": "2.45.0",
                        "scriptName": "[concat(parameters('namePrefix'),'-create-ssh-script')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                        "roleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')), variables('roleDefinitionId'), resourceGroup().id)]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2023-01-01",
                            "name": "[parameters('storageAccountName')]",
                            "condition": "[parameters('createStorageAccount')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Storage/storageAccounts'), parameters('tagsByResource')['Microsoft.Storage/storageAccounts'], json('{}')) ]",
                            "location": "[parameters('location')]",
                            "sku": {
                                "name": "Standard_LRS",
                                "tier": "Standard"
                            },
                            "kind": "StorageV2",
                            "properties": {
                                "accessTier": "Hot"
                            }
                        },
                        {
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "apiVersion": "2018-11-30",
                            "condition": "[parameters('createManagedId')]",
                            "name": "[parameters('managedIdName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), parameters('tagsByResource')['Microsoft.ManagedIdentity/userAssignedIdentities'], json('{}')) ]"
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[variables('roleDefinitionName')]",
                            "dependsOn": [
                                "[parameters('managedIdName')]"
                            ],
                            "properties": {
                                "roleDefinitionId": "[variables('roleDefinitionId')]",
                                "principalId": "[reference(parameters('managedIdName'), '2018-11-30').principalId]",
                                "scope": "[resourceGroup().id]",
                                "principalType": "ServicePrincipal"
                            }
                        },
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "comments": "Creates a new SSH key",
                            "name": "[variables('scriptName')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), parameters('tagsByResource')['Microsoft.Resources/deploymentScripts'], json('{}')) ]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleDefinitionName'))]",
                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                            ],
                            "location": "[parameters('location')]",
                            "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName'))]": {}
                                }
                            },
                            "kind": "AzureCLI",
                            "properties": {
                                "forceUpdateTag": "[parameters('rgRoleGuid')]",
                                "containerSettings": {
                                    "containerGroupName": "[variables('containerGroupName')]"
                                },
                                "storageAccountSettings": {
                                    "storageAccountName": "[parameters('storageAccountName')]",
                                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value]"
                                },
                                "azCliVersion": "[variables('azureCliVersion')]",
                                "scriptContent": "/usr/bin/ssh-keygen -t rsa -b 4096 -f ./tempkey -q -N \"\" ; jq -n -c --arg privateKey \"$(cat ./tempkey)\" --arg publicKey \"$(cat ./tempkey.pub)\" '{\"sshKey\": {\"privateKey\": $privateKey, \"publicKey\": $publicKey}}' > $AZ_SCRIPTS_OUTPUT_PATH",
                                "timeout": "PT15M",
                                "cleanupPreference": "OnSuccess",
                                "retentionInterval": "P1D"
                            }
                        },
                        {
                            "type": "Microsoft.KeyVault/vaults/secrets",
                            "name": "[ concat(parameters('vaultName'), '/', parameters('keyName') ) ]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName'))]"
                            ],
                            "apiVersion": "2022-07-01",
                            "properties": {
                                "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.sshKey.privateKey ]"
                            }
                        },
                        {
                            "type": "Microsoft.Compute/sshPublicKeys",
                            "apiVersion": "2022-11-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName'))]"
                            ],
                            "name": "[ concat(parameters('keyName'), '-public') ]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Compute/sshPublicKeys'), parameters('tagsByResource')['Microsoft.Compute/sshPublicKeys'], json('{}')) ]",
                            "properties": {
                                "publicKey": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.sshKey.publicKey ]"
                            }
                        }
                    ],
                    "outputs": {
                        "vaultName": {
                            "type": "string",
                            "value": "[ parameters('vaultName') ]"
                        },
                        "keyName": {
                            "type": "string",
                            "value": "[ parameters('keyName') ]"
                        },
                        "privateKey": {
                            "type": "securestring",
                            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.sshKey.privateKey ]"
                        },
                        "publicKey": {
                            "type": "string",
                            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.sshKey.publicKey ]"
                        }
                    }
                }
            }

        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "deployOpenShift",
            "condition": "[parameters('deployOCP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]",
                "[resourceId('Microsoft.Resources/deployments', 'createSshKeys')]",
                "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "rgRoleGuid": {
                        "value": "[parameters('rgRoleGuidOcp')]"
                    },
                    "clientId": {
                        "value": "[parameters('clientId')]"
                    },
                    "clientSecret": {
                        "value": "[parameters('clientSecret')]"
                    },
                    "clientObjectId": {
                        "value": "[parameters('clientObjectId')]" 
                    },
                    "baseDomain": {
                        "value": "[parameters('baseDomain')]"
                    },
                    "ocpVersion": {
                        "value": "[parameters('ocpVersion')]"
                    },
                    "baseUrl": {
                        "value": "[uri(variables('baseUrl'),concat(parameters('branch'),'/cloud-pak-for-integration/with-ipi/'))]" 
                    },
                    "baseDomainRG": {
                        "value": "[parameters('baseDomainRG')]" 
                    },
                    "pullSecret": {
                        "value": "[parameters('pullSecret')]" 
                    },
                    "publicSshKey": {
                        "value": "[if( not(equals( parameters('publicSshKey'), '' )), parameters('publicSshKey') ,reference( resourceId('Microsoft.Resources/deployments', 'createSshKeys') ).outputs['publicKey'].value )]" 
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetCIDR": {
                        "value": "[parameters('vnetCIDR')]"
                    },
                    "controlSubnetName": {
                        "value": "[parameters('controlSubnetName')]"
                    },
                    "workerSubnetName": {
                        "value": "[parameters('workerSubnetName')]"
                    },
                    "endpointSubnetName": {
                        "value": "[parameters('endpointSubnetName')]"
                    },
                    "masterNodeSize": {
                        "value": "[parameters('masterNodeSize')]"
                    },
                    "workerNodeSize": {
                        "value": "[parameters('workerNodeSize')]"
                    },
                    "workerNodeQty": {
                        "value": "[parameters('workerNodeQty')]"
                    },
                    "hostEncryption": {
                        "value": "[parameters('hostEncryption')]"
                    },
                    "clusterResourceGroup": {
                        "value": "[parameters('clusterResourceGroup')]" 
                    },
                    "existingClusterResourceGroup": {
                        "value": "[parameters('existingClusterResourceGroup')]"
                    },
                    "networkResourceGroup": {
                        "value": "[parameters('networkResourceGroup')]" 
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "clusterPasswordSecretName": {
                        "value": "[parameters('clusterPasswordSecretName')]"
                    },
                    "useVault": {
                        "value": "[parameters('deployKeyVault')]"
                    },
                    "logLevel": {
                        "value": "[parameters('logLevel')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "namePrefix": {
                            "type": "string"
                        },
                        "rgRoleGuid": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "storageAccountName": {
                            "type": "string"
                        },
                        "managedIdName": {
                            "type": "string"
                        },
                        "networkResourceGroup": {
                            "type": "string"
                        },
                        "clientId": {
                            "type": "string"
                        },
                        "clientSecret": {
                            "type": "securestring"
                        },
                        "clientObjectId": {
                            "type": "string"
                        },
                        "baseDomain": {
                            "type": "string"
                        },
                        "ocpVersion": {
                            "type": "string"
                        },
                        "masterNodeSize": {
                            "type": "string"
                        },
                        "workerNodeSize": {
                            "type": "string"
                        },
                        "workerNodeQty": {
                            "type": "int"
                        },
                        "baseDomainRG": {
                            "type": "string"
                        },
                        "pullSecret": {
                            "type": "secureString"
                        },
                        "publicSshKey": {
                            "type": "securestring"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "vnetCIDR": {
                            "type": "string"
                        },
                        "controlSubnetName": {
                            "type": "string"
                        },
                        "workerSubnetName": {
                            "type": "string"
                        },
                        "endpointSubnetName": {
                            "type": "string"
                        },
                        "hostEncryption": {
                            "type": "bool"
                        },
                        "clusterResourceGroup": {
                            "type": "string"
                        },
                        "existingClusterResourceGroup": {
                            "type": "bool"
                        },
                        "vaultName": {
                            "type": "string"
                        },
                        "clusterPasswordSecretName": {
                            "type": "string"
                        },
                        "useVault": {
                            "type": "bool"
                        },
                        "logLevel": {
                            "type": "string"
                        },
                        "baseUrl": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "azureCliVersion": "2.45.0",
                        "scriptName": "[ concat(parameters('namePrefix'), '-ocp-deploy-script') ]",
                        "containergroupName": "[ concat( parameters('namePrefix'), '-ocp-deploy-cg') ]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                        "roleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('clientObjectId')), variables('roleDefinitionId'), resourceGroup().id)]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[variables('roleDefinitionName')]",
                            "properties": {
                                "roleDefinitionId": "[variables('roleDefinitionId')]",
                                "principalId": "[parameters('clientObjectId')]"
                            }
                        },
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "comments": "Deploys OpenShift IPI cluster on an existing Azure VNet",
                            "name": "[ variables('scriptName') ]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), parameters('tagsByResource')['Microsoft.Resources/deploymentScripts'], json('{}')) ]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleDefinitionName'))]"
                            ],
                            "location": "[parameters('location')]",
                            "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName'))]": {}
                                }
                            },
                            "kind": "AzureCLI",
                            "properties": {
                                "forceUpdateTag": "[parameters('rgRoleGuid')]",
                                "containerSettings": {
                                    "containerGroupName": "[variables('containerGroupName')]",
                                    "subnetIds": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('endpointSubnetName'))]"
                                        }
                                    ]
                                },
                                "storageAccountSettings": {
                                    "storageAccountName": "[parameters('storageAccountName')]",
                                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value]"
                                },
                                "azCliVersion": "[variables('azureCliVersion')]",  
                                "environmentVariables": [
                                    {
                                        "name": "LOCATION",
                                        "value": "[parameters('location')]"
                                    },
                                    {
                                        "name": "CLIENT_ID",
                                        "value": "[parameters('clientId')]"
                                    },
                                    {
                                        "name": "CLIENT_SECRET",
                                        "secureValue": "[parameters('clientSecret')]"
                                    },
                                    {
                                        "name": "BASE_DOMAIN",
                                        "value": "[parameters('baseDomain')]"
                                    },
                                    {
                                        "name": "BASE_DOMAIN_RESOURCE_GROUP",
                                        "value": "[parameters('baseDomainRG')]"
                                    },
                                    {
                                        "name": "PULL_SECRET",
                                        "secureValue": "[parameters('pullSecret')]"
                                    },
                                    {
                                        "name": "PUBLIC_SSH_KEY",
                                        "secureValue": "[parameters('publicSshKey')]"
                                    },
                                    {
                                        "name": "MASTER_NODE_TYPE",
                                        "value": "[parameters('masterNodeSize')]"
                                    },
                                    {
                                        "name": "WORKER_NODE_TYPE",
                                        "value": "[parameters('workerNodeSize')]"
                                    },
                                    {
                                        "name": "WORKER_NODE_QTY",
                                        "value": "[parameters('workerNodeQty')]"
                                    },
                                    {
                                        "name": "VNET_NAME",
                                        "value": "[parameters('vnetName')]"
                                    },
                                    {
                                        "name": "MACHINE_CIDR",
                                        "value": "[parameters('vnetCIDR')]"
                                    },
                                    {
                                        "name": "WORKER_SUBNET_NAME",
                                        "value": "[parameters('workerSubnetName')]"
                                    },
                                    {
                                        "name": "CONTROL_SUBNET_NAME",
                                        "value": "[parameters('controlSubnetName')]"
                                    },
                                    {
                                        "name": "HOST_ENCRYPTION",
                                        "value": "[if(parameters('hostEncryption'),'true','false')]"
                                    },
                                    {
                                        "name": "CLUSTER_RESOURCE_GROUP",
                                        "value": "[parameters('clusterResourceGroup')]"
                                    },
                                    {
                                        "name": "NEW_CLUSTER_RESOURCE_GROUP",
                                        "value": "[if(parameters('existingClusterResourceGroup'),'false','true')]"
                                    },
                                    {
                                        "name": "VAULT_NAME",
                                        "value": "[if(parameters('useVault'),parameters('vaultName'),null())]"
                                    },
                                    {
                                        "name": "SECRET_NAME",
                                        "value": "[parameters('clusterPasswordSecretName')]"
                                    },
                                    {
                                        "name": "NETWORK_RESOURCE_GROUP",
                                        "value": "[parameters('networkResourceGroup')]"
                                    },
                                    {
                                        "name": "BIN_DIR",
                                        "value": "/usr/bin"
                                    },
                                    {
                                        "name": "VERSION",
                                        "value": "[parameters('ocpVersion')]"
                                    },
                                    {
                                        "name": "DEBUG",
                                        "value": "[if(equals(parameters('logLevel'),'Debug'),'true','false')]"
                                    }
                                ],
                                    "primaryScriptUri": "[uri(parameters('baseUrl'),'scripts/deploy-ocp.sh')]",
                                    "supportingScriptUris": [
                                        "[uri(parameters('baseUrl'),'scripts/common.sh')]"
                                ],
                                "timeout": "PT120M",
                                "cleanupPreference": "OnSuccess",
                                "retentionInterval": "P1D"
                            }
                        }            
                    ],
                    "outputs": {
                        "consoleURL": {
                            "type": "string",
                            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.consoleURL ]"
                        },
                        "apiServer": {
                            "type": "string",
                            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.apiServer ]"
                        },
                        "adminUser": {
                            "type": "string",
                            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.adminUser ]"
                        },
                        "clusterName": {
                            "type": "string",
                            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.clusterName ]"
                        },
                        "clusterId": {
                            "type": "string",
                            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.clusterId ]"
                        },
                        "infraId": {
                            "type": "string",
                            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.clusterDetails.infraId ]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "deployOdf",
            "condition": "[and(parameters('deployODF'),equals(parameters('storageType'),'ODF'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]",
                "[resourceId('Microsoft.Resources/deployments', 'deployOpenShift')]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "baseUrl": {
                        "value": "[uri(variables('baseUrl'),concat(parameters('branch'),'/cloud-pak-for-integration/with-ipi/'))]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "rgRoleGuid": {
                        "value": "[parameters('rgRoleGuidOdf')]" 
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "ocpApiServer": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2022-09-01').outputs['apiServer'].value]" 
                    },
                    "ocpUsername": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2022-09-01').outputs['adminUser'].value]" 
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "clusterPasswordSecretName": {
                        "value": "[parameters('clusterPasswordSecretName')]"
                    },
                    "storageSizePerNode": {
                        "value": "[parameters('storageSizePerNode')]"
                    },
                    "existingNodes": {
                        "value": "[parameters('existingNodes')]" 
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('endpointSubnetName')]" 
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "namePrefix": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "rgRoleGuid": {
                            "type": "string"
                        },
                        "createStorageAccount": {
                            "type": "bool"
                        },
                        "storageAccountName": {
                            "type": "string"         
                        },
                        "createManagedIdentity": {
                            "type": "bool"
                        },
                        "managedIdName": {
                            "type": "string"
                        },
                        "ocpApiServer": {
                            "type": "string"
                        },
                        "ocpUsername": {
                            "type": "string"
                        },
                        "vaultName": {
                            "type": "string"
                        },
                        "clusterPasswordSecretName": {
                            "type": "string"
                        },
                        "storageSizePerNode": {
                            "type": "string"
                        },
                        "existingNodes": {
                            "type": "bool"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "subnetName": {
                            "type": "string"
                        },
                        "baseUrl": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        }
                        
                    },
                    "variables": {
                        "containerGroupName": "[concat(parameters('namePrefix'), '-odf-cg')]",
                        "scriptName": "[concat(parameters('namePrefix'),'-odf-script')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                        "roleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')), variables('roleDefinitionId'), resourceGroup().id)]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "comments": "Deploys ODF onto an OpenShift IPI cluster",
                            "name": "[variables('scriptName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), parameters('tagsByResource')['Microsoft.Resources/deploymentScripts'], json('{}')) ]",
                            "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName'))]": {}
                                }
                            },
                            "kind": "AzureCLI",
                            "properties": {
                                "forceUpdateTag": "[parameters('rgRoleGuid')]",
                                "containerSettings": {
                                    "containerGroupName": "[variables('containerGroupName')]",
                                    "subnetIds": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnetName'))]"
                                        }
                                    ]
                                },
                                "storageAccountSettings": {
                                    "storageAccountName": "[parameters('storageAccountName')]",
                                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value]"
                                },
                                "azCliVersion": "2.45.0",  
                                "environmentVariables": [
                                    {
                                        "name": "API_SERVER",
                                        "value": "[parameters('ocpApiServer')]"
                                    },
                                    {
                                        "name": "OCP_USERNAME",
                                        "value": "[parameters('ocpUsername')]"
                                    },
                                    {
                                        "name": "VAULT_NAME",
                                        "value": "[parameters('vaultName')]"
                                    },
                                    {
                                        "name": "SECRET_NAME",
                                        "value": "[parameters('clusterPasswordSecretName')]"
                                    },
                                    {
                                        "name": "STORAGE_SIZE",
                                        "value": "[parameters('storageSizePerNode')]"
                                    },
                                    {
                                        "name": "CLUSTER_LOCATION",
                                        "value": "[parameters('location')]"
                                    },
                                    {
                                        "name": "EXISTING_NODES",
                                        "value": "[if(parameters('existingNodes'),'yes','no')]"
                                    }
                                ],
                                "primaryScriptUri": "[uri(parameters('baseUrl'),'scripts/deploy-odf.sh')]",
                                "supportingScriptUris": [
                                    "[uri(parameters('baseUrl'),'scripts/common.sh')]"
                                ],
                                "timeout": "PT90M",
                                "cleanupPreference": "OnSuccess",
                                "retentionInterval": "P1D"
                            },
                            "dependsOn": [
                                "[variables('roleDefinitionName')]"
                            ]
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2023-01-01",
                            "condition": "[parameters('createStorageAccount')]",
                            "name": "[parameters('storageAccountName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Storage/storageAccounts'), parameters('tagsByResource')['Microsoft.Storage/storageAccounts'], json('{}')) ]",
                            "sku": {
                                "name": "Standard_LRS",
                                "tier": "Standard"
                            },
                            "kind": "StorageV2",
                            "properties": {
                                "accessTier": "Hot"
                            }
                        },
                        {
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "apiVersion": "2018-11-30",
                            "name": "[parameters('managedIdName')]",
                            "condition": "[parameters('createManagedIdentity')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), parameters('tagsByResource')['Microsoft.ManagedIdentity/userAssignedIdentities'], json('{}')) ]"
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[variables('roleDefinitionName')]",
                            "condition": "[parameters('createManagedIdentity')]",
                            "dependsOn": [
                                "[parameters('managedIdName')]"
                            ],
                            "properties": {
                                "roleDefinitionId": "[variables('roleDefinitionId')]",
                                "principalId": "[reference(parameters('managedIdName'), '2018-11-30').principalId]",
                                "scope": "[resourceGroup().id]",
                                "principalType": "ServicePrincipal"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "deployCloudPakForIntegration",
            "condition": "[parameters('deployCP4I')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'scriptPrerequisites')]",
                "[resourceId('Microsoft.Resources/deployments', 'deployOpenShift')]",
                "[resourceId('Microsoft.Resources/deployments', 'deployOdf')]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "acceptLicense": {
                        "value": "[parameters('acceptLicense')]"
                    },
                    "baseUrl": {
                        "value": "[uri(variables('baseUrl'),concat(parameters('branch'),'/cloud-pak-for-integration/with-ipi/'))]"
                    },
                    "cp4iLicense": {
                        "value": "[parameters('cp4iLicense')]"
                    },
                    "cp4iVersion": {
                        "value": "[parameters('cp4iVersion')]"
                    },
                    "createManagedIdentity": {
                        "value": false
                    },
                    "createStorageAccount": {
                        "value": false
                    },
                    "ibmEntitlementKey": {
                        "value": "[parameters('ibmEntitlementKey')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedIdName": {
                        "value": "[parameters('managedIdName')]"
                    },
                    "namePrefix": {
                        "value": "[parameters('namePrefix')]"
                    },
                    "namespace": {
                        "value": "[parameters('namespace')]" 
                    },
                    "ocpApiServer": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2022-09-01').outputs['apiServer'].value]" 
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "clusterPasswordSecretName": {
                        "value": "[parameters('clusterPasswordSecretName')]"
                    },
                    "ocpUsername": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2022-09-01').outputs['adminUser'].value]" 
                    },
                    "rgRoleGuid": {
                        "value": "[parameters('rgRoleGuidCp4i')]" 
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "storageClass": {
                        "value": "[variables('storageClass')[parameters('storageType')]]" 
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('endpointSubnetName')]" 
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "namePrefix": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "ibmEntitlementKey": {
                            "type": "securestring"
                        },
                        "cp4iVersion": {
                            "type": "string"
                        },
                        "cp4iLicense": {
                            "type": "string"
                        },
                        "acceptLicense": {
                            "type": "string"
                        },
                        "rgRoleGuid": {
                            "type": "string"
                        },
                        "createStorageAccount": {
                            "type": "bool"
                        },
                        "storageAccountName": {
                            "type": "string"           
                        },
                        "createManagedIdentity": {
                            "type": "bool"
                        },
                        "storageClass": {
                            "type": "string"
                        },
                        "managedIdName": {
                            "type": "string"
                        },
                        "ocpApiServer": {
                            "type": "string"
                        },
                        "ocpUsername": {
                            "type": "string"
                        },
                        "vaultName": {
                            "type": "string"
                        },
                        "clusterPasswordSecretName": {
                            "type": "string"
                        },
                        "namespace": {
                            "type": "string"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "subnetName": {
                            "type": "string"
                        },
                        "baseUrl": {
                            "type": "string"
                        },
                        "tagsByResource": {
                            "type": "object"
                        } 
                    },
                    "variables": {
                        "containerGroupName": "[concat(parameters('namePrefix'), '-cp4i-cg')]",
                        "scriptName": "[concat(parameters('namePrefix'),'-cp4i-script')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                        "roleDefinitionName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName')), variables('roleDefinitionId'), resourceGroup().id)]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "comments": "Deploys Cloud Pak Integration onto an ARO cluster",
                            "name": "[variables('scriptName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), parameters('tagsByResource')['Microsoft.Resources/deploymentScripts'], json('{}')) ]",
                            "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdName'))]": {}
                                }
                            },
                            "kind": "AzureCLI",
                            "properties": {
                                "forceUpdateTag": "[parameters('rgRoleGuid')]",
                                "containerSettings": {
                                    "containerGroupName": "[variables('containerGroupName')]",
                                    "subnetIds": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnetName'))]"
                                        }
                                    ]
                                },
                                "storageAccountSettings": {
                                    "storageAccountName": "[parameters('storageAccountName')]",
                                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value]"
                                },
                                "azCliVersion": "2.45.0",  
                                "environmentVariables": [
                                    {
                                        "name": "API_SERVER",
                                        "value": "[parameters('ocpApiServer')]"
                                    },
                                    {
                                        "name": "OCP_USERNAME",
                                        "value": "[parameters('ocpUsername')]"
                                    },
                                    {
                                        "name": "VAULT_NAME",
                                        "value": "[parameters('vaultName')]"
                                    },
                                    {
                                        "name": "SECRET_NAME",
                                        "value": "[parameters('clusterPasswordSecretName')]"
                                    },
                                    {
                                        "name": "STORAGE_CLASS",
                                        "value": "[parameters('storageClass')]"
                                    },
                                    {
                                        "name": "IBM_ENTITLEMENT_KEY",
                                        "secureValue": "[parameters('ibmEntitlementKey')]"
                                    },
                                    {
                                        "name": "VERSION",
                                        "value": "[parameters('cp4iVersion')]"
                                    },
                                    {
                                        "name": "LICENSE_ID",
                                        "value": "[parameters('cp4iLicense')]"
                                    },
                                    {
                                        "name": "LICENSE",
                                        "value": "[parameters('acceptLicense')]"
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "value": "[parameters('namespace')]"
                                    }
                                ],
                                "primaryScriptUri": "[uri(parameters('baseUrl'),'scripts/deploy-cp4i.sh')]",
                                "supportingScriptUris": [
                                    "[uri(parameters('baseUrl'),'scripts/common.sh')]"
                                ],
                                "timeout": "PT120M",
                                "cleanupPreference": "OnSuccess",
                                "retentionInterval": "P1D"
                            },
                            "dependsOn": [
                                "[variables('roleDefinitionName')]"
                            ]
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2023-01-01",
                            "condition": "[parameters('createStorageAccount')]",
                            "name": "[parameters('storageAccountName')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Storage/storageAccounts'), parameters('tagsByResource')['Microsoft.Storage/storageAccounts'], json('{}')) ]",
                            "sku": {
                                "name": "Standard_LRS",
                                "tier": "Standard"
                            },
                            "kind": "StorageV2",
                            "properties": {
                                "accessTier": "Hot"
                            }
                        },
                        {
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "apiVersion": "2018-11-30",
                            "name": "[parameters('managedIdName')]",
                            "condition": "[parameters('createManagedIdentity')]",
                            "location": "[parameters('location')]",
                            "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), parameters('tagsByResource')['Microsoft.ManagedIdentity/userAssignedIdentities'], json('{}')) ]"
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[variables('roleDefinitionName')]",
                            "condition": "[parameters('createManagedIdentity')]",
                            "dependsOn": [
                                "[parameters('managedIdName')]"
                            ],
                            "properties": {
                                "roleDefinitionId": "[variables('roleDefinitionId')]",
                                "principalId": "[reference(parameters('managedIdName'), '2018-11-30').principalId]",
                                "scope": "[resourceGroup().id]",
                                "principalType": "ServicePrincipal"
                            }
                        }
                    ],
                    "outputs": {
                        "cp4iConsoleUrl": {
                            "type": "string",
                            "condition": "[equals(parameters('acceptLicense'),'accept')]",
                            "value": "[ reference( resourceId('Microsoft.Resources/deploymentScripts', variables('scriptName') ) ).outputs.cp4iDetails.cp4iConsoleURL ]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "clusterURL": {
            "type": "string",
            "condition": "[parameters('deployOCP')]",
            "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2022-09-01').outputs['consoleURL'].value]"
        },
        "platformNavigatorURL": {
            "type": "string",
            "condition": "[equals(parameters('acceptLicense'),'accept')]",
            "value": "[reference(resourceId('Microsoft.Resources/deployments','deployOpenShift'),'2022-09-01').outputs['cp4iConsoleUrl'].value]"
        }
    }
}